<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[为Hexo Next主题添加哈林摇特效]]></title>
      <url>/2018/02/05/%E4%B8%BAHexo-Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/</url>
      <content type="html"><![CDATA[<blockquote>
<p>前几天看到一个博友的博客特别的动感，后面查阅资料后才知道那个特效叫哈林摇特效，花了点时间整理了下这个特效在Hexo NEXT主题下的实现方式，出来的效果还不错，让自己的博客变得十分的动感，低调又不失活跃。效果的演示可以看本博客站点概要里面High按钮，尝试点击体验,效果很动感，页面有激烈的跳动，带上耳机还可以听到动感的音乐，有喜欢的朋友可以放在自己的博客上。</p>
</blockquote>
<p>  话不多说，看下实现方式。</p>
<p>  三个步骤：</p>
<h3 id="创建特效文件"><a href="#创建特效文件" class="headerlink" title="创建特效文件"></a>创建特效文件</h3><p>  在主题目录中，创建<code>layout\_macro\high.swig</code>，添加如下代码：<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"收藏到书签，偶尔High一下^_^"</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">class</span>=<span class="string">"mw-harlem_shake_slow wobble shake"</span> <span class="attr">href</span>=<span class="string">'javascript:(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    function c() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var e = document.createElement("link");</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.setAttribute("type", "text/css");</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.setAttribute("rel", "stylesheet");</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.setAttribute("href", f);</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.setAttribute("class", l);</span></span></span><br><span class="line"><span class="tag"><span class="string">        document.body.appendChild(e)</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function h() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var e = document.getElementsByClassName(l);</span></span></span><br><span class="line"><span class="tag"><span class="string">        for (var t = 0; t &lt; e.length; t++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            document.body.removeChild(e[t])</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function p() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var e = document.createElement("div");</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.setAttribute("class", a);</span></span></span><br><span class="line"><span class="tag"><span class="string">        document.body.appendChild(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">        setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            document.body.removeChild(e)</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;, 100)</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function d(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        return &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            height : e.offsetHeight,</span></span></span><br><span class="line"><span class="tag"><span class="string">            width : e.offsetWidth</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function v(i) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var s = d(i);</span></span></span><br><span class="line"><span class="tag"><span class="string">        return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function m(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var t = e;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var n = 0;</span></span></span><br><span class="line"><span class="tag"><span class="string">        while (!!t) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            n += t.offsetTop;</span></span></span><br><span class="line"><span class="tag"><span class="string">            t = t.offsetParent</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">        return n</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function g() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var e = document.documentElement;</span></span></span><br><span class="line"><span class="tag"><span class="string">        if (!!window.innerWidth) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            return window.innerHeight</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            return e.clientHeight</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">        return 0</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function y() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        if (window.pageYOffset) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            return window.pageYOffset</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">        return Math.max(document.documentElement.scrollTop, document.body.scrollTop)</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function E(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var t = m(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">        return t &gt;= w &amp;&amp; t &lt;= b + w</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function S() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var e = document.createElement("audio");</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.setAttribute("class", l);</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.src = i;</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.loop = false;</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.addEventListener("canplay", function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                x(k)</span></span></span><br><span class="line"><span class="tag"><span class="string">            &#125;, 500);</span></span></span><br><span class="line"><span class="tag"><span class="string">            setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                N();</span></span></span><br><span class="line"><span class="tag"><span class="string">                p();</span></span></span><br><span class="line"><span class="tag"><span class="string">                for (var e = 0; e &lt; O.length; e++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                    T(O[e])</span></span></span><br><span class="line"><span class="tag"><span class="string">                &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">            &#125;, 15500)</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;, true);</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.addEventListener("ended", function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            N();</span></span></span><br><span class="line"><span class="tag"><span class="string">            h()</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;, true);</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;";</span></span></span><br><span class="line"><span class="tag"><span class="string">        document.body.appendChild(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.play()</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function x(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.className += " " + s + " " + o</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function T(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)]</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    function N() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var e = document.getElementsByClassName(s);</span></span></span><br><span class="line"><span class="tag"><span class="string">        var t = new RegExp("\\b" + s + "\\b");</span></span></span><br><span class="line"><span class="tag"><span class="string">        for (var n = 0; n &lt; e.length; ) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            e[n].className = e[n].className.replace(t, "")</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">    var e = 30;</span></span></span><br><span class="line"><span class="tag"><span class="string">    var t = 30;</span></span></span><br><span class="line"><span class="tag"><span class="string">    var n = 350;</span></span></span><br><span class="line"><span class="tag"><span class="string">    var r = 350;</span></span></span><br><span class="line"><span class="tag"><span class="string">    var i = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3";</span></span></span><br><span class="line"><span class="tag"><span class="string">    var s = "mw-harlem_shake_me";</span></span></span><br><span class="line"><span class="tag"><span class="string">    var o = "im_first";</span></span></span><br><span class="line"><span class="tag"><span class="string">    var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"];</span></span></span><br><span class="line"><span class="tag"><span class="string">    var a = "mw-strobe_light";</span></span></span><br><span class="line"><span class="tag"><span class="string">    var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css";</span></span></span><br><span class="line"><span class="tag"><span class="string">    var l = "mw_added_css";</span></span></span><br><span class="line"><span class="tag"><span class="string">    var b = g();</span></span></span><br><span class="line"><span class="tag"><span class="string">    var w = y();</span></span></span><br><span class="line"><span class="tag"><span class="string">    var C = document.getElementsByTagName("*");</span></span></span><br><span class="line"><span class="tag"><span class="string">    var k = null;</span></span></span><br><span class="line"><span class="tag"><span class="string">    for (var L = 0; L &lt; C.length; L++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var A = C[L];</span></span></span><br><span class="line"><span class="tag"><span class="string">        if (v(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            if (E(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                k = A;</span></span></span><br><span class="line"><span class="tag"><span class="string">                break</span></span></span><br><span class="line"><span class="tag"><span class="string">            &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    if (A === null) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        console.warn("Could not find a node of the right size. Please try a different page.");</span></span></span><br><span class="line"><span class="tag"><span class="string">        return</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    c();</span></span></span><br><span class="line"><span class="tag"><span class="string">    S();</span></span></span><br><span class="line"><span class="tag"><span class="string">    var O = [];</span></span></span><br><span class="line"><span class="tag"><span class="string">    for (var L = 0; L &lt; C.length; L++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        var A = C[L];</span></span></span><br><span class="line"><span class="tag"><span class="string">        if (v(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">            O.push(A)</span></span></span><br><span class="line"><span class="tag"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;)()'</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-music"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> High<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="引用特效代码"><a href="#引用特效代码" class="headerlink" title="引用特效代码"></a>引用特效代码</h3><p>  在侧边栏，引用特效代码。在主题目录，修改<code>layout\_macro\sidebar.swig</code>：</p>
  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include 'high.swig' %&#125;</span><br></pre></td></tr></table></figure>
<p>  <img src="http://oymkn4m7b.bkt.clouddn.com/20160802003240.png" alt="img"></p>
<h3 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h3><p>  将”High”和”RSS”并排展示，在主题目录中，修改<code>source\css\_schemes\Pisces\_sidebar.styl</code><br>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span>;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://oymkn4m7b.bkt.clouddn.com/20160802003448.png" alt="img"></p>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>关于优化，建议将layout_macro\high.swig中的harlem-shake.mp3和harlem-shake.css放到cdn上，然后引用cdn地址，加快访问速度。</p>
<p>当然，上述只是一个标准的版本，可以根据自己的探索设置成不同效果的哈林摇，欢迎脑洞探索和关注留言共同探讨！</p>
]]></content>
      
        <categories>
            
            <category> HEXO </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 博客添加背景动画]]></title>
      <url>/2018/02/05/Hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<h3 id="快速操作"><a href="#快速操作" class="headerlink" title="快速操作"></a>快速操作</h3><p>背景动画基于<code>canvas</code>，添加到博客上也比较简单，在<code>\themes\next\layout\_layout.swig</code>的<code>&lt;/body&gt;</code>上面添加<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>
<p>在<code>\themes\next\_config.yml</code>中添加以下字段开启此功能：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: <span class="keyword">true</span></span><br></pre></td></tr></table></figure></p>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>以上两步做完之后页面能看到效果，但是会有一些兼容问题，特别是在手机上，下面操作后会排除兼容问题。</p>
<p>添加完了，发现博客背景是白色，会遮住动画，只留下两边一点点的位置看到动画效果，这时候可以去设置一下背景颜色，在<code>\themes\next\source\css\_schemes\Pisces\_layout.styl</code>中，把<code>.content-wrap中的background</code>修改为none。</p>
<p>这时候如果用手机打开，也能看到动画效果，但是带来的体验不好，显得页面比较乱，这是可以把<code>.content-wrap的+mobile()</code>中的<code>background</code>修改为white，这样手机端的体验就好很多，却又不影响电脑端的炫酷动画。</p>
<p>附上我的<code>.content-wrap</code>配置：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">padding</span>: $content-desktop-padding;</span><br><span class="line">  <span class="attribute">width</span>: $content-desktop;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">700px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: $box-shadow-inner;</span><br><span class="line">  <span class="attribute">border-radius</span>: $border-radius-inner;</span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 100%;</span><br><span class="line">    <span class="selector-tag">padding</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">border-radius</span>: <span class="selector-tag">initial</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  +<span class="selector-tag">mobile</span>() &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: auto;</span><br><span class="line">    <span class="attribute">border-radius</span>: initial;</span><br><span class="line">    <span class="attribute">background</span>: white;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="修改一些样式"><a href="#修改一些样式" class="headerlink" title="修改一些样式"></a>修改一些样式</h3><p>never_yu‘Blog中的文章添加许多样式，看了一下github上的源码，在 <code>themes\next\source\css\_custom\custom.styl</code> 中，添加如下css：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><span class="line">//修改文章内链接文本样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">	<span class="attribute">border-bottom</span>: none;</span><br><span class="line">	&amp;:hover &#123;</span><br><span class="line">		<span class="selector-tag">color</span>: <span class="selector-id">#0477ab</span>;</span><br><span class="line">		<span class="selector-tag">text-decoration</span>: <span class="selector-tag">underline</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//修改不在文章内的链接文本样式</span><br><span class="line"><span class="selector-class">.link-blue</span>&#123;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#f36</span>;</span><br><span class="line">	&amp;:hover &#123;</span><br><span class="line">		<span class="selector-tag">color</span>: <span class="selector-id">#f00</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//修改文章内code样式</span><br><span class="line"><span class="selector-tag">code</span> &#123;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">background</span>:<span class="number">#333</span>;&#125;</span><br><span class="line">//修改文章中图片样式，改为居中</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line">// 下载样式</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-id">#download</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: inline-block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">	<span class="attribute">background</span>: transparent;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">	<span class="attribute">transition</span>: all .<span class="number">5s</span> ease;</span><br><span class="line">	<span class="attribute">font-weight</span>: bold;</span><br><span class="line">	&amp;:hover &#123;</span><br><span class="line">		<span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</span><br><span class="line">		<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//阅读全文样式</span><br><span class="line"><span class="selector-class">.post-more-link</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>:relative;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>: bold;</span><br><span class="line">	<span class="attribute">background</span>: transparent;</span><br><span class="line">	<span class="attribute">transition</span>: all .<span class="number">5s</span> ease;</span><br><span class="line">	&amp;:hover &#123;</span><br><span class="line">		<span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</span><br><span class="line">		<span class="selector-tag">color</span>: <span class="selector-id">#eee</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">// 颜色块-黄</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-yellow</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">80%</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>:bold;</span><br><span class="line">	<span class="attribute">line-height</span>:<span class="number">1</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">	<span class="attribute">white-space</span>:nowrap;</span><br><span class="line">	<span class="attribute">vertical-align</span>:baseline;</span><br><span class="line">	<span class="attribute">border-radius</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#f0ad4e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 颜色块-黑</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-black</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">80%</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>:bold;</span><br><span class="line">	<span class="attribute">line-height</span>:<span class="number">1</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">	<span class="attribute">white-space</span>:nowrap;</span><br><span class="line">	<span class="attribute">vertical-align</span>:baseline;</span><br><span class="line">	<span class="attribute">border-radius</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line">// 颜色块-绿</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-green</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">80%</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>:bold;</span><br><span class="line">	<span class="attribute">line-height</span>:<span class="number">1</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">	<span class="attribute">white-space</span>:nowrap;</span><br><span class="line">	<span class="attribute">vertical-align</span>:baseline;</span><br><span class="line">	<span class="attribute">border-radius</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#5cb85c</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 颜色块-蓝</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-blue</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">80%</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>:bold;</span><br><span class="line">	<span class="attribute">line-height</span>:<span class="number">1</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">	<span class="attribute">white-space</span>:nowrap;</span><br><span class="line">	<span class="attribute">vertical-align</span>:baseline;</span><br><span class="line">	<span class="attribute">border-radius</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#2780e3</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 颜色块-紫</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-purple</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">80%</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>:bold;</span><br><span class="line">	<span class="attribute">line-height</span>:<span class="number">1</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">	<span class="attribute">white-space</span>:nowrap;</span><br><span class="line">	<span class="attribute">vertical-align</span>:baseline;</span><br><span class="line">	<span class="attribute">border-radius</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#9954bb</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 颜色块-红</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-red</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">80%</span>;</span><br><span class="line">	<span class="attribute">font-weight</span>:bold;</span><br><span class="line">	<span class="attribute">line-height</span>:<span class="number">1</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">text-align</span>:center;</span><br><span class="line">	<span class="attribute">white-space</span>:nowrap;</span><br><span class="line">	<span class="attribute">vertical-align</span>:baseline;</span><br><span class="line">	<span class="attribute">border-radius</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#df3e3e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 左侧边框红色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-red</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-left-color</span>: <span class="number">#df3e3e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 左侧边框黄色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-yellow</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-left-color</span>: <span class="number">#f0ad4e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 左侧边框绿色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-green</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-left-color</span>: <span class="number">#5cb85c</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 左侧边框蓝色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-blue</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-left-color</span>: <span class="number">#2780e3</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 左侧边框紫色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-purple</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-left-color</span>: <span class="number">#9954bb</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 右侧边框红色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-red</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-right-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-right-color</span>: <span class="number">#df3e3e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 右侧边框黄色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-yellow</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-right-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-right-color</span>: <span class="number">#f0ad4e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 右侧边框绿色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-green</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-right-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-right-color</span>: <span class="number">#5cb85c</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 右侧边框蓝色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-blue</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-right-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-right-color</span>: <span class="number">#2780e3</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 右侧边框紫色块级</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-purple</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-right-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-right-color</span>: <span class="number">#9954bb</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 上侧边框红色</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-red</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-top-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-top-color</span>: <span class="number">#df3e3e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 上侧边框黄色</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-yellow</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-top-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-top-color</span>: <span class="number">#f0ad4e</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 上侧边框绿色</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-green</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-top-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-top-color</span>: <span class="number">#5cb85c</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 上侧边框蓝色</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-blue</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-top-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-top-color</span>: <span class="number">#2780e3</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 上侧边框紫色</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-purple</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">border-top-width</span>: <span class="number">5px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">	<span class="attribute">border-top-color</span>: <span class="number">#9954bb</span>;</span><br><span class="line">&#125;</span><br><span class="line">//动画模块</span><br><span class="line">//第一篇博客中-精于心，简于形-的动画（https://neveryu.github.io/page/2/）</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#yu-1</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">position</span>:relative;</span><br><span class="line">	<span class="attribute">border-top</span>:<span class="number">1px</span> solid <span class="number">#222</span>;</span><br><span class="line">	<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#222</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">110%</span>;</span><br><span class="line">	<span class="attribute">cursor</span>:pointer;</span><br><span class="line">	&amp;:hover &#123;</span><br><span class="line">		<span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span><br><span class="line">		<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">		<span class="selector-tag">animation</span>: <span class="selector-tag">animate-yu-1</span> 3<span class="selector-tag">s</span> <span class="selector-tag">ease-in</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> animate-yu-<span class="number">1</span> &#123;</span><br><span class="line">	0% &#123;</span><br><span class="line">		<span class="attribute">left</span>:-<span class="number">10px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	10% &#123;</span><br><span class="line">		<span class="attribute">left</span>:<span class="number">10px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	20% &#123;</span><br><span class="line">		<span class="attribute">left</span>:-<span class="number">8px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	30% &#123;</span><br><span class="line">		<span class="attribute">left</span>:<span class="number">8px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	40% &#123;</span><br><span class="line">		<span class="attribute">left</span>:-<span class="number">5px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	50% &#123;</span><br><span class="line">		<span class="attribute">left</span>:<span class="number">5px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	60% &#123;</span><br><span class="line">		<span class="attribute">left</span>:-<span class="number">3px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	70% &#123;</span><br><span class="line">		<span class="attribute">left</span>:<span class="number">3px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	80% &#123;</span><br><span class="line">		<span class="attribute">left</span>:-<span class="number">1px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	90% &#123;</span><br><span class="line">		<span class="attribute">left</span>:<span class="number">1px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	100% &#123;</span><br><span class="line">		<span class="attribute">left</span>:<span class="number">0px</span>;</span><br><span class="line">		<span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//留言页面-[最近访客]-的样式</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#yu-2</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>:inline;</span><br><span class="line">	<span class="attribute">position</span>:relative;</span><br><span class="line">	<span class="attribute">border-top</span>:<span class="number">1px</span> solid <span class="number">#222</span>;</span><br><span class="line">	<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#222</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">130%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> HEXO </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[成功实施DevOps的七个有力工具]]></title>
      <url>/2018/02/05/%E6%88%90%E5%8A%9F%E5%AE%9E%E6%96%BDDevOps%E7%9A%84%E4%B8%83%E4%B8%AA%E6%9C%89%E5%8A%9B%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<blockquote>
<p>如今，每个软件企业都在谈论DevOps，他们希望从DevOps中获得好处。DevOps本身不是开发工具，而是开发文化的一次革新，为了能够成功地实施DevOps，需要借助一些工具。Pavan Belagatti列出了7个强有力的工具可以帮助企业成功地实施DevOps。</p>
</blockquote>
<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p><a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>是容器市场的领头羊。随着越来越多的软件企业采用了微服务架构，容器化也成为一个大趋势。在接下来的几年，Docker会变得越来越流行。我们已经在生产环境使用Docker部署了很多服务。Docker简化了配置管理，提升了可操控性，并让横向扩展变得简单。Docker还能让容器在不同的位置自由地移动。</p>
<h3 id="Git（GitHub）"><a href="#Git（GitHub）" class="headerlink" title="Git（GitHub）"></a>Git（GitHub）</h3><p>Git是一个免费的开源分布式版本控制系统，不管是小型应用还是大型应，它都能应付自如。Git创建于10年前，因为当时的Linux社区需要这么一个可以支持分布式系统的SCM（Source Control Management）软件。这个平台有助于开发者们在上面进行协作。它的那些主要特性，比如代码仓库、代码拉取等等，对开发人员来说很有吸引力。与GitHub的集成十分容易，几乎任何系统都可以连接到GitHub上，没有什么特殊限制。GitHub还可以作为一个网络社交平台，你可以在上面放置你的个人信息和项目相关的数据。GitHub优于其它SCM工具的地方在于，它支持本地分支、过度区域和多工作流。</p>
<h3 id="AWS"><a href="#AWS" class="headerlink" title="AWS"></a>AWS</h3><p>AWS为企业组织提供了灵活的服务，帮助企业高效地交付软件产品。相比敏捷，DevOps能够更快地交付产品，为了做到这一点，AWS为各个公司提供了强大的云计算服务。这些服务包括计算、存储、网络、数据库、数据分析、应用服务、部署、管理、移动、开发者工具以及IoT工具。</p>
<h3 id="JIRA"><a href="#JIRA" class="headerlink" title="JIRA"></a>JIRA</h3><p>JIRA是来自Altassian公司的一款很受欢迎的敏捷开发工具，它提供了众多功能，比如缺陷跟踪、问题跟踪，并在某种程度上为企业提供了项目管理功能。它还支持Scrum、看板、敏捷报告、组合计划、插件、移动应用，并提供了一组健壮的API。</p>
<h3 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h3><p>可以使用Ansible为DevOps打下牢固的根基。Ansible是一个简单但却十分强大的配置管理服务器，它帮助团队横向扩展IT自动化规模，管理复杂的部署，并提高生产力。它为团队乃至整个企业带来自动化。很多成功的公司都在使用Ansible来促进IT自动化，而且一旦用了Ansible就不会再考虑其它解决方案了。企业之所以喜欢Ansible，是因为它提供了一种完全不可变的服务器架构。不可变的服务器架构可以保证在添加、销毁或替换服务器时不会对服务造成任何影响。</p>
<h3 id="Slack"><a href="#Slack" class="headerlink" title="Slack"></a>Slack</h3><p>Slack是一个集成工具，任何想实践敏捷和DevOps的组织都可以使用它。它容易监控，还支持通知机制，是一个简单且强大的工具。Slack通过创建通信通道来自动化执行常见的任务，并用它来分发实时信息，缩短团队间的反馈延迟，加快团队的行动，提升团队的生产力。</p>
<h3 id="Shippable"><a href="#Shippable" class="headerlink" title="Shippable"></a>Shippable</h3><p>Shippable可以帮助软件企业加快创新进程。它是一个流水线式的持续部署平台，一般被作为托管服务或企业服务器来帮助软件企业走向现代化。它让编码、打包、部署、运行Docker容器变得更容易。Shippable通过它的CI和CD平台来支持自动化。它在不破坏安全性的前提下使用顺畅的部署来自动化执行那些重复的、机械化的任务。</p>
]]></content>
      
        <categories>
            
            <category> devops </category>
            
        </categories>
        
        
        <tags>
            
            <tag> devops </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用JSON获取Bing每日背景图片]]></title>
      <url>/2018/02/02/%E7%94%A8JSON%E8%8E%B7%E5%8F%96Bing%E6%AF%8F%E6%97%A5%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<p>经过访问BING的网址最终发现，bing中文网一直在提供每日更新背景图片壁纸的json数据.<br>访问网址：<a href="http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1" target="_blank" rel="noopener">http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1</a><br>根据上面地址的结构，我暂时研究到就三项属性有效，他们分别是:</p>
<ul>
<li>format，非必要。我理解为输出格式，不存在或者不等于js，即为xml格式，等于js时，输出json格式；</li>
<li>idx，非必要。不存在或者等于0时，输出当天的图片，-1为已经预备用于明天显示的信息，1则为昨天的图片，idx最多获取到前16天的图片信息；*</li>
<li>n，必要。这是输出信息的数量，比如n=1，即为1条，以此类推，至多输出8条；*</li>
</ul>
<p>*号注释：此处我们要注意的时，是否正常的输出信息，与n和idx有关，通过idx的值，我们就可以获得之前bing所使用的背景图片的信息了。</p>
<p>提供一个我正在用json转php，调用图片地址的方法:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$str = file_get_contents(<span class="string">'http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1'</span>);</span><br><span class="line">   $array = json_decode($str);</span><br><span class="line">   $imgurl = $array-&gt;&#123;<span class="string">"images"</span>&#125;[<span class="number">0</span>]-&gt;&#123;<span class="string">"url"</span>&#125;;</span><br></pre></td></tr></table></figure></p>
<h4 id="亲测方法"><a href="#亲测方法" class="headerlink" title="亲测方法"></a>亲测方法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从bing上获取背景图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">model_op_bing</span> <span class="keyword">extends</span> <span class="title">components_basemodel</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> CACHE_BING_PIC = <span class="string">"op.bing.%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Cache_MemCache</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> $cache = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($pkid = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct($pkid);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cache = SCache::getCacheEngine(<span class="string">"Memcache"</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cache-&gt;init(<span class="keyword">array</span>(<span class="string">'servers'</span> =&gt; lib_Constant::$MEMCACHE_SERVERS));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBackground</span><span class="params">($isForce=false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $cacheKey = sprintf(<span class="keyword">self</span>::CACHE_BING_PIC, date(<span class="string">"Y_m_d"</span>,time()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;cache-&gt;get($cacheKey) &amp;&amp; <span class="keyword">false</span> == $isForce ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;cache-&gt;get($cacheKey);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $picSuffix = <span class="string">'http://cn.bing.com'</span>;</span><br><span class="line">        $result = file_get_contents(</span><br><span class="line">            sprintf(<span class="string">'%s%s'</span>, $picSuffix, <span class="string">'/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1'</span>)</span><br><span class="line">        );</span><br><span class="line">        $bing = json_decode($result);</span><br><span class="line">        $imgurl = $bing-&gt;&#123;<span class="string">"images"</span>&#125;[<span class="number">0</span>]-&gt;&#123;<span class="string">"url"</span>&#125;;</span><br><span class="line">        $imgurl = <span class="keyword">false</span> === strpos($picSuffix, $imgurl)</span><br><span class="line">            ? sprintf(<span class="string">'%s%s'</span>, $picSuffix, $imgurl) : $imgurl;</span><br><span class="line"></span><br><span class="line">        $type = pathinfo($imgurl, PATHINFO_EXTENSION);</span><br><span class="line">        $data = file_get_contents($imgurl);</span><br><span class="line">        $base64 = <span class="string">'data:image/'</span> . $type . <span class="string">';base64,'</span> . base64_encode($data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cache-&gt;set($cacheKey, $base64, <span class="number">43200</span>);</span><br><span class="line">        <span class="keyword">return</span> $base64;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>调用方：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$params[<span class="string">'backgroundImg'</span>] = (date(<span class="string">'Ymd'</span>) == <span class="string">'20161208'</span> || date(<span class="string">'Ymd'</span>) == <span class="string">'20161209'</span>)</span><br><span class="line">            ? <span class="string">"/assets/op/img/1208_index.jpg"</span> : $bingModel-&gt;getBackground((!<span class="keyword">empty</span>($_GET[<span class="string">'update'</span>])) ? <span class="keyword">true</span> : <span class="keyword">false</span>);</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[两个重要函数（获取无限极菜单+批量排序）]]></title>
      <url>/2018/02/02/%E4%B8%A4%E4%B8%AA%E9%87%8D%E8%A6%81%E5%87%BD%E6%95%B0%EF%BC%88%E8%8E%B7%E5%8F%96%E6%97%A0%E9%99%90%E6%9E%81%E8%8F%9C%E5%8D%95-%E6%89%B9%E9%87%8F%E6%8E%92%E5%BA%8F%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>以下两个函数是自己在接触PHP的时候学到的，这里做一下记录只是为了怀念那个时候对于行业的那种陌生感和探索欲望，这两个函数虽然不是很难，但是用的地方不少，比如获取目录树，可以用在对类目的管理、评论等无限级的地方都可以用，话不多说，请看代码。</p>
<h4 id="获取目录树"><a href="#获取目录树" class="headerlink" title="获取目录树"></a>获取目录树</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 得到菜单栏目树</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> xiexiang 2016-03-17</span></span><br><span class="line"><span class="comment">* <span class="doctag">@params</span> eg $map = "name = 'xiexiang'"   //查询条件</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMenu</span><span class="params">($map )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//实例化数据表menu</span></span><br><span class="line">    $menu = <span class="keyword">new</span> model_op_menu() ;</span><br><span class="line">    $order = <span class="string">"ORDER BY level ASC,sort DESC"</span>;</span><br><span class="line">    $menu_list = $menu-&gt; select($map , <span class="string">''</span>, <span class="string">''</span>, $order , <span class="string">''</span>, <span class="string">''</span>);</span><br><span class="line">    $mod_list = $menu_list-&gt; items;</span><br><span class="line">    <span class="keyword">if</span> (!$mod_list || <span class="keyword">empty</span>( $mod_list)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $tmp = <span class="keyword">array</span>() ;</span><br><span class="line">    $address = <span class="keyword">array</span>() ; <span class="comment">//父级地址</span></span><br><span class="line">    <span class="keyword">foreach</span> ($mod_list <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">        $id = $v[ <span class="string">'id'</span>];</span><br><span class="line">        <span class="keyword">if</span> ($v [<span class="string">'level'</span>] &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">//一级</span></span><br><span class="line">            $tmp [$id] = $v;</span><br><span class="line">            $address [$id] = &amp; $tmp[$id ];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//子集</span></span><br><span class="line">            $pid = $v[ <span class="string">'pid'</span>];</span><br><span class="line">            <span class="keyword">if</span> (!$address[ $pid][<span class="string">'child'</span> ]) &#123;</span><br><span class="line">                $address[ $pid][<span class="string">'child'</span> ] = <span class="keyword">array</span>() ;</span><br><span class="line">            &#125;</span><br><span class="line">            $address [$pid][ <span class="string">'child'</span>][$id ] = $v;</span><br><span class="line">            $address [$id] = &amp; $address[$pid ][<span class="string">'child'</span>][ $id];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $tmp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="批量排序"><a href="#批量排序" class="headerlink" title="批量排序"></a>批量排序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 批量排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">pagesort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//异常插入</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $sort = lib_BaseUtils::getStr( $_GET[<span class="string">'sort'</span> ]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>( $sort)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>( <span class="string">'请选择需要排序的数据！'</span> , <span class="number">0</span>) ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ( $sort <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric( $k) || !is_numeric($v )) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $sql_bat_sort .= <span class="string">" WHEN &#123; $k&#125; THEN &#123;$v&#125; "</span>;</span><br><span class="line">            $sql_ids .= <span class="string">','</span> . $k;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $menu = <span class="keyword">new</span> model_op_menu() ;</span><br><span class="line">        $sql = <span class="string">"UPDATE op_menu SET sort= CASE id "</span> . $sql_bat_sort . <span class="string">" END WHERE id IN ("</span> . trim($sql_ids , <span class="string">', '</span>) . <span class="string">")"</span>;</span><br><span class="line">        $menu -&gt;query( $sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'批量排序成功！'</span>, <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span> -&gt;printmsg( $e-&gt;getMessage (), $e -&gt;getCode()) ;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="巧办法"><a href="#巧办法" class="headerlink" title="巧办法"></a>巧办法</h4><p>上诉的获取目录树也可以用通过更加简单的办法来实现，在数据库设计合理的情况下，可以使用递归的方式来做。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * - 得到树形处理后的分类列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $pid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $space</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTree</span><span class="params">($pid=<span class="number">0</span>,&amp;$result=[],$space=<span class="number">0</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $space+=<span class="number">2</span>;</span><br><span class="line">        $parents = Category::where(<span class="string">'cate_pid'</span>,$pid)-&gt;orderBy(<span class="string">'cate_order'</span>,<span class="string">'DESC'</span>)-&gt;get();</span><br><span class="line">        <span class="keyword">foreach</span> ($parents <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line">            <span class="keyword">if</span> ($val-&gt;cate_pid != <span class="number">0</span>)&#123;</span><br><span class="line">                $val[<span class="string">'cate_name'</span>] = str_repeat(<span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>,$space).<span class="string">'▲ '</span>.$val[<span class="string">'cate_name'</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            $result[] = $val;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;getTree($val-&gt;cate_id,$result,$space);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[七牛云图床API接口指南]]></title>
      <url>/2018/02/02/%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8AAPI%E6%8E%A5%E5%8F%A3%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<h3 id="登录到七牛云官网注册一个账号"><a href="#登录到七牛云官网注册一个账号" class="headerlink" title="登录到七牛云官网注册一个账号"></a>登录到七牛云官网注册一个账号</h3><p>地址：<a href="http://www.qiniu.com" target="_blank" rel="noopener">http://www.qiniu.com</a></p>
<h3 id="获取对应的七牛云秘钥"><a href="#获取对应的七牛云秘钥" class="headerlink" title="获取对应的七牛云秘钥"></a>获取对应的七牛云秘钥</h3><p>位置：个人面板-&gt;秘钥管理<br>获取一对 AccessKey/SecretKey 秘钥</p>
<h3 id="建立存储空间"><a href="#建立存储空间" class="headerlink" title="建立存储空间"></a>建立存储空间</h3><p>位置：对象存储<br>对象存储中可以管理上传的文件、对空间的设置、域名绑定、样式分割符设置及图片样式设定。</p>
<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>文档地址：<a href="http://developer.qiniu.com/code/v7/sdk/php.html#usage" target="_blank" rel="noopener">http://developer.qiniu.com/code/v7/sdk/php.html#usage</a></p>
<h4 id="1、引入SDK"><a href="#1、引入SDK" class="headerlink" title="1、引入SDK"></a>1、引入SDK</h4><p>无论你是通过哪种方式安装的 SDK，只需要一句简单的 require 语句将安装好的SDK包含到你的项目中。请参考如下表格，找到适合你的安装方式，将SDK引入到你的项目中。请用你项目中的实际路径替换 path_to_sdk。<br>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Composer 安装</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'path_to_sdk/vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">下载Composer安装包</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'path_to_sdk/vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">下载源码安装包</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'path_to_sdk/autoload.php'</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="2、SDK结构"><a href="#2、SDK结构" class="headerlink" title="2、SDK结构"></a>2、SDK结构</h4><p>  可以直接查看我们的SDK目录，即可大致了解我们SDK的结构。</p>
<ul>
<li>最外层包含：配置文件， 鉴权和一些公共的函数</li>
<li>HTTP 目录主要包含了一些对 http 进行封装的类，这块你可以不用关心。</li>
<li>Storage 目录主要包含两大块：Bucket 中文件的管理和文件的上传。</li>
<li><p>Processing 目录主要包含文件的处理，文件处理又包含两个方面：同步处理和异步处理。</p>
<p>为了帮助您更好的了解和使用我们的sdk，我们还提供了各种使用示例。 如果使用中遇到问题，可以通过Github或者我们的工单进行反馈。下面我们对一些关键点进行简单的介绍，方便您快速入门。</p>
<h4 id="3、鉴权类"><a href="#3、鉴权类" class="headerlink" title="3、鉴权类"></a>3、鉴权类</h4><p>在使用七牛的SDK的过程中鉴权是很重要的一块，不管是上传鉴权，下载签权， 还是回调的签权。 PHP SDK 中的Auth类封装了所有的鉴权方式。 所以在使用 PHP SDK 时基本都会先对鉴权类进行初始化：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">require</span> <span class="string">'path_to_sdk/vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 用于签名的公钥和私钥 </span></span><br><span class="line">  $accessKey = <span class="string">'Access_Key'</span>;</span><br><span class="line">  $secretKey = <span class="string">'Secret_Key'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化签权对象 </span></span><br><span class="line">  $auth = <span class="keyword">new</span> Auth($accessKey, $secretKey);</span><br><span class="line">````  </span><br><span class="line">初始化好Auth 类后，就可以调用相应的方法了，比如生成私有下载链接方法 privateDownloadUrl，获取上传Token方法 uploadToken，验证回调方法 verifyCallback等。</span><br><span class="line"></span><br><span class="line"><span class="comment">### 上传流程</span></span><br><span class="line">````php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">require_once</span> <span class="string">'path_to_sdk/vendor/autoload.php'</span>;                    <span class="comment">//引入类库文件 建议用composer方式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 引入鉴权类   </span></span><br><span class="line">     <span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Auth</span>;                                                                   <span class="comment">//命名空间                               </span></span><br><span class="line">    <span class="comment">// 引入上传类   </span></span><br><span class="line">     <span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Storage</span>\<span class="title">UploadManager</span>;                                  <span class="comment">//命名空间</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需要填写你的 Access Key 和 Secret Key                             //这里就用到了注册账户后用到的两个秘钥</span></span><br><span class="line">     $accessKey = <span class="string">'Access_Key'</span>;</span><br><span class="line">     $secretKey = <span class="string">'Secret_Key'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建鉴权对象   </span></span><br><span class="line">     $auth = <span class="keyword">new</span> Auth($accessKey, $secretKey);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 要上传的空间   </span></span><br><span class="line">     $bucket = <span class="string">'Bucket_Name'</span>;                                          <span class="comment">//设定的上传空间名</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成上传 Token   </span></span><br><span class="line">     $token = $auth-&gt;uploadToken($bucket);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 要上传文件的本地路径   </span></span><br><span class="line">      $filePath = <span class="string">'./php-logo.png'</span>;                                     <span class="comment">//上传时候图片在本地的路径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上传到七牛后保存的文件名   </span></span><br><span class="line">      $key = <span class="string">'my-php-logo.png'</span>;                                         <span class="comment">//保存到七牛上面的命名</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 UploadManager 对象并进行文件的上传   </span></span><br><span class="line">     $uploadMgr = <span class="keyword">new</span> UploadManager();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用 UploadManager 的 putFile 方法进行文件的上传   </span></span><br><span class="line">     <span class="keyword">list</span>($ret, $err) = $uploadMgr-&gt;putFile($token, $key, $filePath);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"\n====&gt; putFile result: \n"</span>;</span><br><span class="line">    <span class="keyword">if</span> ($err !== <span class="keyword">null</span>) &#123;</span><br><span class="line">        var_dump($err);                                                 <span class="comment">//返回结果根据需要处理</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        var_dump($ret);                                 </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">require</span> <span class="string">'path_to_sdk/vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 引入鉴权类   </span></span><br><span class="line">      <span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需要填写你的 Access Key 和 Secret Key   </span></span><br><span class="line">     $accessKey = <span class="string">'Access_Key'</span>;</span><br><span class="line">     $secretKey = <span class="string">'Secret_Key'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建鉴权对象   </span></span><br><span class="line">     $auth = <span class="keyword">new</span> Auth($accessKey, $secretKey);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//baseUrl构造成私有空间的域名/key的形式   </span></span><br><span class="line">     $baseUrl = <span class="string">'http://domain/key'</span>;                                                  <span class="comment">//空间名+文件名 的格式</span></span><br><span class="line">    $authUrl = $auth-&gt;privateDownloadUrl($baseUrl);                      <span class="comment">//加密处理后再返回</span></span><br><span class="line">    <span class="keyword">echo</span> $authUrl;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="删除单个文件"><a href="#删除单个文件" class="headerlink" title="删除单个文件"></a>删除单个文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">require_once</span> <span class="string">'path_to_sdk/vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Auth</span>;</span><br><span class="line">  <span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Storage</span>\<span class="title">BucketManager</span>;</span><br><span class="line"></span><br><span class="line">  $accessKey = <span class="string">'Access_Key'</span>;</span><br><span class="line">  $secretKey = <span class="string">'Secret_Key'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化Auth状态 </span></span><br><span class="line">  $auth = <span class="keyword">new</span> Auth($accessKey, $secretKey);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化BucketManager </span></span><br><span class="line">  $bucketMgr = <span class="keyword">new</span> BucketManager($auth);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//你要测试的空间， 并且这个key在你空间中存在 </span></span><br><span class="line">  $bucket = <span class="string">'Bucket_Name'</span>;</span><br><span class="line">  $key = <span class="string">'php-logo.png'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//删除$bucket 中的文件 $key </span></span><br><span class="line">  $err = $bucketMgr-&gt;delete($bucket, $key);                       <span class="comment">//空间名  和  未加密的文件名</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"\n====&gt; delete $key : \n"</span>;</span><br><span class="line">  <span class="keyword">if</span> ($err !== <span class="keyword">null</span>) &#123;</span><br><span class="line">      var_dump($err);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Success!"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p> 还有更多的操作请参考官方文档，地址：<a href="http://developer.qiniu.com/code/v7/sdk/php.html#install" target="_blank" rel="noopener">http://developer.qiniu.com/code/v7/sdk/php.html#install</a></p>
<h3 id="实际案例（实战项目中的方法封装）"><a href="#实际案例（实战项目中的方法封装）" class="headerlink" title="实际案例（实战项目中的方法封装）"></a>实际案例（实战项目中的方法封装）</h3> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/七牛云图片上传配置</span><br><span class="line"><span class="keyword">const</span>  ACCESS_KEY = <span class="string">'byJc-8owLt9G5ljXsNYbTsfOCKzQgTV4UTPu3sCG'</span> ;            <span class="comment">//私钥AK</span></span><br><span class="line"><span class="keyword">const</span>  SECRET_KEY = <span class="string">'6ybTxRxyDGndimpVMgK_k-6s1prGIPkGtB0Xolyb'</span> ;            <span class="comment">//私钥SK</span></span><br><span class="line"><span class="keyword">const</span>  QINIU_BUCKET = <span class="string">'op-zbj'</span> ;                                                        <span class="comment">//空间名（对象存储中）</span></span><br><span class="line"><span class="keyword">const</span>  BASE_URL  = <span class="string">'http://ohsllkayi.bkt.clouddn.com'</span> ;                     <span class="comment">//外链默认域名（对象存储-&gt;内容管理）</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 上传图片到七牛云</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $filePath 图片的本地路径</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $fileName 图片名</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> mixed  array</span></span><br><span class="line"><span class="comment">* <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">UploadPicToQiNiu</span> <span class="params">($fileName , $filePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化签权对象</span></span><br><span class="line">    $auth = <span class="keyword">new</span> Auth(lib_Constant:: ACCESS_KEY , lib_Constant:: SECRET_KEY );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成上传 Token</span></span><br><span class="line">    $token = $auth-&gt; uploadToken (lib_Constant:: QINIU_BUCKET) ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上传到七牛后保存的文件名</span></span><br><span class="line">    $key = <span class="string">'qiniu_'</span>.md5( $fileName .rand(<span class="number">100</span> , <span class="number">999</span>)) ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化 UploadManager 对象并进行文件的上传</span></span><br><span class="line">    $uploadMgr = <span class="keyword">new</span> UploadManager() ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用 UploadManager 的 putFile 方法进行文件的上传</span></span><br><span class="line">    <span class="keyword">list</span> ( $ret, $err ) = $uploadMgr -&gt; putFile( $token , $key , $filePath) ;</span><br><span class="line">    <span class="keyword">if</span> ($err !== <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> $err ;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> $ret ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 从七牛云上获取图片到本地</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $filePath  数据库中的图片地址</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">downloadPicToQiNiu</span> <span class="params">($filePath )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 构建鉴权对象</span></span><br><span class="line">    $auth = <span class="keyword">new</span> Auth(lib_Constant:: ACCESS_KEY , lib_Constant:: SECRET_KEY );</span><br><span class="line">    <span class="comment">//baseUrl构造成私有空间的域名/key的形式</span></span><br><span class="line">    $baseUrl = lib_Constant:: BASE_URL. <span class="string">'/'</span> .$filePath ;</span><br><span class="line">    $authUrl = $auth-&gt; privateDownloadUrl ($baseUrl ) ;</span><br><span class="line">    <span class="keyword">return</span> $authUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 批量获取七牛云上的图片</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $filePathArray</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> array|bool</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">batchDownloadPicToQiNiu</span> <span class="params">( $filePathArray)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>( $filePathArray ))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 构建鉴权对象</span></span><br><span class="line">    $returnFullImagesPath = [] ;</span><br><span class="line">    $auth = <span class="keyword">new</span> Auth(lib_Constant:: ACCESS_KEY , lib_Constant:: SECRET_KEY );</span><br><span class="line">    <span class="keyword">foreach</span> ($filePathArray <span class="keyword">as</span> $filePath)&#123;</span><br><span class="line">        <span class="comment">//baseUrl构造成私有空间的域名/key的形式</span></span><br><span class="line">        $baseUrl = lib_Constant:: BASE_URL. <span class="string">'/'</span> .$filePath ;</span><br><span class="line">        $returnFullImagesPath [] = $auth -&gt;privateDownloadUrl ( $baseUrl) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $returnFullImagesPath ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 从七牛云上删除图片</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $filePath</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteToQiNiu</span> <span class="params">($filePath )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//初始化Auth状态</span></span><br><span class="line">    $auth = <span class="keyword">new</span> Auth(lib_Constant:: ACCESS_KEY , lib_Constant:: SECRET_KEY );</span><br><span class="line">    <span class="comment">//初始化BucketManager</span></span><br><span class="line">    $bucketMgr = <span class="keyword">new</span> BucketManager( $auth );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除$bucket 中的文件 $key</span></span><br><span class="line">    $err = $bucketMgr -&gt; delete(lib_Constant:: QINIU_BUCKET ,$filePath ) ;</span><br><span class="line">   <span class="comment">// echo "\n====&gt; delete $key : \n";</span></span><br><span class="line">    <span class="keyword">if</span> ( $err !== <span class="keyword">null</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> fasle ;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP中静态方法(static)与非静态方法的使用及区别]]></title>
      <url>/2018/02/02/PHP%E4%B8%AD%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95-static-%E4%B8%8E%E9%9D%9E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<h2 id="表述"><a href="#表述" class="headerlink" title="表述"></a>表述</h2><ul>
<li>static方法是类中的一个成员方法,属于整个类,即使不用创建任何对象也可以直接调用!</li>
<li>静态方法效率上要比实例化高，静态方法的缺点是不自动进行销毁，而实例化的则可以做销毁</li>
<li>静态方法和静态变量创建后始终使用同一块内存，而使用实例的方式会创建多个内存。</li>
<li>C++中，若类的方法前加了static关键字，则该方法称为静态方法，反之为实例方法。静态方法为类所有，可以通过对象来使用，也可以通过类来使用。但一般提倡通过类名来使用，因为静态方法只要定义了类，不必建立类的实例就可使用。静态方法只能用类的静态成员</li>
<li>static关键字用来修饰属性、方法，称这些属性、方法为静态属性、静态方法。</li>
<li>static关键字声明一个属性或方法是和类相关的，而不是和类的某个特定的实例相关，因此，这类属性或方法也称为“类属性”或“类方法”</li>
<li>如果访问控制权限允许，可不必创建该类对象而直接使用类名加两个冒号“::”调用。</li>
<li>static关键字可以用来修饰变量、方法。</li>
<li>不经过实例化，就可以直接访问类中static的属性和static的方法。</li>
<li>static 的属性和方法，只能访问static的属性和方法，不能类访问非静态的属性和方法。因为静态属性和方法被创建时，可能还没有任何这个类的实例可以被调用.</li>
<li>static的属性，在内存中只有一份，为所有的实例共用</li>
<li>使用self:: 关键字访问当前类的静态成员.</li>
<li>一个类的所有实例，共用类中的静态属性</li>
</ul>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>下面例子中的设置了一个计数器$count属性，设置private 和 static 修饰。<br>这样，外界并不能直接访问$count属性。而程序运行的结果我们也看到多个实例在使用同一个静态的$count 属性<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span>     </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span>   </span></span><br><span class="line"><span class="class"></span>&#123;     </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $count = <span class="number">0</span> ; <span class="comment">//记录所有用户的登录情况.     </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">self</span>::$count = <span class="keyword">self</span>::$count + <span class="number">1</span>;     </span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;       </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$count;     </span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">self</span>::$count = <span class="keyword">self</span>::$count - <span class="number">1</span>;     </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;     </span><br><span class="line">$user1 = <span class="keyword">new</span> user();     </span><br><span class="line">$user2 = <span class="keyword">new</span> user();     </span><br><span class="line">$user3 = <span class="keyword">new</span> user();     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"now here have "</span> . $user1-&gt;getCount() . <span class="string">" user"</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">unset</span>($user3);     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"now here have "</span> . $user1-&gt;getCount() . <span class="string">" user"</span>;     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p> 静态属性直接调用,静态属性不需要实例化就可以直接使用，在类还没有创建时就可以直接使用</p>
<p>使用的方式是： 类名::静态属性名<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math</span>   </span></span><br><span class="line"><span class="class"></span>&#123;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $pi = <span class="number">3.14</span>;     </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">// 求一个半径3的园的面积。     </span></span><br><span class="line">$r = <span class="number">3</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"半径是 $r 的面积是&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::$pi * $r * $r;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="comment">//这里我觉得 3.14 不够精确，我把它设置的更精确。     </span></span><br><span class="line">Math::$pi = <span class="number">3.141592653589793</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"半径是 $r 的面积是&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::$pi * $r * $r;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>类没有创建，静态属性就可以直接使用。那静态属性在什么时候在内存中被创建？ 在PHP中没有看到相关的资料。引用Java中的概念，来解释应该也具有通用性</p>
<p>静态方法<br>静态方法不需要所在类被实例化就可以直接使用。</p>
<p>使用的方式是类名：：静态方法名</p>
<p>下面我们继续写这个Math类，用来进行数学计算。我们设计一个方法用来算出其中的最大值。既然是数学运算，我们也没有必要去实例化这个类，如果这个方法</p>
<p>可以拿过来就用就方便多了。我们这只是为了演示static方法而设计的这个类。在PHP提供了 max() 函数比较数值。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math</span>   </span></span><br><span class="line"><span class="class"></span>&#123;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Max</span><span class="params">($num1, $num2)</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">return</span> $num1 &gt; $num2 ? $num1 : $num2;     </span><br><span class="line">    &#125;          </span><br><span class="line">&#125;     </span><br><span class="line">$a = <span class="number">99</span>;     </span><br><span class="line">$b = <span class="number">88</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"显示 $a 和 $b 中的最大值是"</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::Max($a, $b);     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;   </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;   </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line">$a = <span class="number">99</span>;     </span><br><span class="line">$b = <span class="number">100</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"显示 $a 和 $b 中的最大值是"</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::Max($a,$b);     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p> 静态方法如何调用静态方法<br>第一个例子，一个静态方法调用其它静态方法时，使用self::<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="comment">// 实现最大值比较的Math类。     </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math</span>   </span></span><br><span class="line"><span class="class"></span>&#123;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Max</span><span class="params">($num1, $num2)</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">return</span> $num1 &gt; $num2 ? $num1 : $num2;     </span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Max3</span><span class="params">($num1, $num2, $num3)</span> </span>&#123;     </span><br><span class="line">        $num1 = <span class="keyword">self</span>::Max($num1, $num2);     </span><br><span class="line">        $num2 = <span class="keyword">self</span>::Max($num2, $num3);     </span><br><span class="line">        $num1 = <span class="keyword">self</span>::Max($num1, $num2);             </span><br><span class="line">        <span class="keyword">return</span> $num1;     </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;     </span><br><span class="line">$a = <span class="number">99</span>;     </span><br><span class="line">$b = <span class="number">77</span>;     </span><br><span class="line">$c = <span class="number">88</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"显示 $a $b $c 中的最大值是"</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::Max3($a, $b, $c);     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p> 静态方法调用静态属性<br>使用self:: 调用本类的静态属性。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="comment">//      </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>   </span></span><br><span class="line"><span class="class"></span>&#123;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $pi = <span class="number">3.14</span>;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">circleAcreage</span><span class="params">($r)</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">return</span> $r * $r * <span class="keyword">self</span>::$pi;     </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;     </span><br><span class="line">$r = <span class="number">3</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">" 半径 $r 的圆的面积是 "</span> . Circle::circleAcreage($r);     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>静态方法不能调用非静态属性 。不能使用self::调用非静态属性。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="comment">// 这个方式是错误的     </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>   </span></span><br><span class="line"><span class="class"></span>&#123;     </span><br><span class="line">    <span class="keyword">public</span> $pi = <span class="number">3.14</span>;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">circleAcreage</span><span class="params">($r)</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">return</span> $r * $r * <span class="keyword">self</span>::pi;     </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;     </span><br><span class="line">$r = <span class="number">3</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">" 半径 $r 的圆的面积是 "</span> . Circle::circleAcreage($r);     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p> 也不能使用 $this 获取非静态属性的值。</p>
<p>静态方法调用非静态方法<br>PHP5中，在静态方法中不能使用 $this 标识调用非静态方法.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="comment">// 实现最大值比较的Math类。     </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math</span>   </span></span><br><span class="line"><span class="class"></span>&#123;         </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Max</span><span class="params">($num1, $num2)</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"bad&lt;br /&gt;"</span>;             </span><br><span class="line">        <span class="keyword">return</span> $num1 &gt; $num2 ? $num1 : $num2;     </span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Max3</span><span class="params">($num1, $num2, $num3)</span> </span>&#123;     </span><br><span class="line">        $num1 = <span class="keyword">$this</span>-&gt;Max($num1, $num2);     </span><br><span class="line">        $num2 = <span class="keyword">$this</span>-&gt;Max($num2, $num3);     </span><br><span class="line">        $num1 = <span class="keyword">$this</span>-&gt;Max($num1, $num2);             </span><br><span class="line">        <span class="keyword">return</span> $num1;     </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;     </span><br><span class="line">$a = <span class="number">99</span>;     </span><br><span class="line">$b = <span class="number">77</span>;     </span><br><span class="line">$c = <span class="number">188</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"显示 $a $b $c 中的最大值是"</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::Max3($a, $b, $c);    <span class="comment">//同样的这个会报错    </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p> 当一个类中有非静态方法被self:: 调用时，系统会自动将这个方法转换为静态方法。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="comment">// 实现最大值比较的Math类。     </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math</span>   </span></span><br><span class="line"><span class="class"></span>&#123;         </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Max</span><span class="params">($num1, $num2)</span> </span>&#123;            </span><br><span class="line">        <span class="keyword">return</span> $num1 &gt; $num2 ? $num1 : $num2;     </span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Max3</span><span class="params">($num1, $num2, $num3)</span> </span>&#123;     </span><br><span class="line">        $num1 = <span class="keyword">self</span>::Max($num1, $num2);     </span><br><span class="line">        $num2 = <span class="keyword">self</span>::Max($num2, $num3);     </span><br><span class="line">        $num1 = <span class="keyword">self</span>::Max($num1, $num2);             </span><br><span class="line">        <span class="keyword">return</span> $num1;     </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;     </span><br><span class="line">$a = <span class="number">99</span>;     </span><br><span class="line">$b = <span class="number">77</span>;     </span><br><span class="line">$c = <span class="number">188</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"显示 $a $b $c 中的最大值是"</span>;     </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;     </span><br><span class="line"><span class="keyword">echo</span> Math::Max3($a, $b, $c);     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP给源代码加密的几种方法]]></title>
      <url>/2018/02/02/PHP%E7%BB%99%E6%BA%90%E4%BB%A3%E7%A0%81%E5%8A%A0%E5%AF%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<blockquote>
<p>虽说分享是传统的美德，但我们有时候辛辛苦苦写一些程序只是为了卖点小钱，挣点辛苦费，也防止有些没有道德的人倒卖，所以我们不得不对我们的程序进行加密，以下我们来介绍一下如何通过PHP的自定义函数来加密我们的PHP源代码.</p>
</blockquote>
<p>方法一：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">encode_file_contents</span><span class="params">($filename)</span> </span>&#123;  </span><br><span class="line">     $type=strtolower(substr(strrchr($filename,<span class="string">'.'</span>),<span class="number">1</span>));  </span><br><span class="line">     <span class="keyword">if</span> (<span class="string">'php'</span> == $type &amp;&amp; is_file($filename) &amp;&amp; is_writable($filename)) &#123; <span class="comment">// 如果是PHP文件 并且可写 则进行压缩编码  </span></span><br><span class="line">         $contents = file_get_contents($filename); <span class="comment">// 判断文件是否已经被编码处理  </span></span><br><span class="line">         $contents = php_strip_whitespace($filename);   </span><br><span class="line"> </span><br><span class="line">         <span class="comment">// 去除PHP头部和尾部标识  </span></span><br><span class="line">         $headerPos = strpos($contents,<span class="string">'&lt;?php'</span>);  </span><br><span class="line">         $footerPos = strrpos($contents,<span class="string">'?&gt;'</span>);  </span><br><span class="line">         $contents = substr($contents, $headerPos + <span class="number">5</span>, $footerPos - $headerPos);  </span><br><span class="line">         $encode = base64_encode(gzdeflate($contents)); <span class="comment">// 开始编码  </span></span><br><span class="line">         $encode = <span class="string">'&lt;?php'</span>.<span class="string">"\n eval(gzinflate(base64_decode("</span>.<span class="string">"'"</span>.$encode.<span class="string">"'"</span>.<span class="string">")));\n\n?&gt;"</span>;   </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">return</span> file_put_contents($filename, $encode);  </span><br><span class="line">     &#125;  </span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line"> &#125;   </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//调用函数  </span></span><br><span class="line"> $filename = <span class="string">'dam.php'</span>;  </span><br><span class="line"> encode_file_contents($filename);  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"OK,加密完成！"</span> </span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>方法二：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">RandAbc</span><span class="params">($length = <span class="string">""</span>)</span> </span>&#123; <span class="comment">// 返回随机字符串  </span></span><br><span class="line">     $str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"</span>;  </span><br><span class="line">     <span class="keyword">return</span> str_shuffle($str);  </span><br><span class="line"> &#125;   </span><br><span class="line"> </span><br><span class="line"> $filename = <span class="string">'index.php'</span>; <span class="comment">//要加密的文件  </span></span><br><span class="line"> $T_k1 = RandAbc(); <span class="comment">//随机密匙1  </span></span><br><span class="line"> $T_k2 = RandAbc(); <span class="comment">//随机密匙2  </span></span><br><span class="line"> $vstr = file_get_contents($filename);  </span><br><span class="line"> $v1 = base64_encode($vstr);  </span><br><span class="line"> $c = strtr($v1, $T_k1, $T_k2); <span class="comment">//根据密匙替换对应字符。  </span></span><br><span class="line"> $c = $T_k1.$T_k2.$c;  </span><br><span class="line"> $q1 = <span class="string">"O00O0O"</span>;  </span><br><span class="line"> $q2 = <span class="string">"O0O000"</span>;  </span><br><span class="line"> $q3 = <span class="string">"O0OO00"</span>;  </span><br><span class="line"> $q4 = <span class="string">"OO0O00"</span>;  </span><br><span class="line"> $q5 = <span class="string">"OO0000"</span>;  </span><br><span class="line"> $q6 = <span class="string">"O00OO0"</span>;  </span><br><span class="line"> $s = <span class="string">'$'</span>.$q6.<span class="string">'=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$'</span>.$q1.<span class="string">'=$'</span>.$q6.<span class="string">'&#123;3&#125;.$'</span>.$q6.<span class="string">'&#123;6&#125;.$'</span>.$q6.<span class="string">'&#123;33&#125;.$'</span>.$q6.<span class="string">'&#123;30&#125;;$'</span>.$q3.<span class="string">'=$'</span>.$q6.<span class="string">'&#123;33&#125;.$'</span>.$q6.<span class="string">'&#123;10&#125;.$'</span>.$q6.<span class="string">'&#123;24&#125;.$'</span>.$q6.<span class="string">'&#123;10&#125;.$'</span>.$q6.<span class="string">'&#123;24&#125;;$'</span>.$q4.<span class="string">'=$'</span>.$q3.<span class="string">'&#123;0&#125;.$'</span>.$q6.<span class="string">'&#123;18&#125;.$'</span>.$q6.<span class="string">'&#123;3&#125;.$'</span>.$q3.<span class="string">'&#123;0&#125;.$'</span>.$q3.<span class="string">'&#123;1&#125;.$'</span>.$q6.<span class="string">'&#123;24&#125;;$'</span>.$q5.<span class="string">'=$'</span>.$q6.<span class="string">'&#123;7&#125;.$'</span>.$q6.<span class="string">'&#123;13&#125;;$'</span>.$q1.<span class="string">'.=$'</span>.$q6.<span class="string">'&#123;22&#125;.$'</span>.$q6.<span class="string">'&#123;36&#125;.$'</span>.$q6.<span class="string">'&#123;29&#125;.$'</span>.$q6.<span class="string">'&#123;26&#125;.$'</span>.$q6.<span class="string">'&#123;30&#125;.$'</span>.$q6.<span class="string">'&#123;32&#125;.$'</span>.$q6.<span class="string">'&#123;35&#125;.$'</span>.$q6.<span class="string">'&#123;26&#125;.$'</span>.$q6.<span class="string">'&#123;30&#125;;eval($'</span>.$q1.<span class="string">'("'</span>.base64_encode(<span class="string">'$'</span>.$q2.<span class="string">'="'</span>.$c.<span class="string">'";eval(\'?&gt;\'.$'</span>.$q1.<span class="string">'($'</span>.$q3.<span class="string">'($'</span>.$q4.<span class="string">'($'</span>.$q2.<span class="string">',$'</span>.$q5.<span class="string">'*2),$'</span>.$q4.<span class="string">'($'</span>.$q2.<span class="string">',$'</span>.$q5.<span class="string">',$'</span>.$q5.<span class="string">'),$'</span>.$q4.<span class="string">'($'</span>.$q2.<span class="string">',0,$'</span>.$q5.<span class="string">'))));'</span>).<span class="string">'"));'</span>;  </span><br><span class="line"> </span><br><span class="line"> $s = <span class="string">'&lt;?php '</span>.<span class="string">"\n"</span>.$s.<span class="string">"\n"</span>.<span class="string">' ?&gt;'</span>;  </span><br><span class="line"> <span class="comment">//echo $s;  </span></span><br><span class="line"> <span class="comment">// 生成 加密后的PHP文件  </span></span><br><span class="line"> $fpp1 = fopen(<span class="string">'temp_'</span>.$filename, <span class="string">'w'</span>);  </span><br><span class="line"> fwrite($fpp1, $s) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'写文件错误'</span>);  </span><br><span class="line"> </span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>方法三：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"> </span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">text_auth</span>  </span></span><br><span class="line"><span class="class"> </span>&#123;  </span><br><span class="line">     <span class="keyword">var</span> $n_iter;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">text_auth</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         <span class="keyword">$this</span>-&gt;setIter(<span class="number">32</span>);  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">setIter</span><span class="params">($n_iter)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         <span class="keyword">$this</span>-&gt;n_iter = $n_iter;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">getIter</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;n_iter;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($data, $key)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $n = <span class="keyword">$this</span>-&gt;_resize($data, <span class="number">4</span>);  </span><br><span class="line"> </span><br><span class="line">         $data_long[<span class="number">0</span>]   = $n;  </span><br><span class="line">         $n_data_long    = <span class="keyword">$this</span>-&gt;_str2long(<span class="number">1</span>, $data, $data_long);  </span><br><span class="line"> </span><br><span class="line">         $n = count($data_long);  </span><br><span class="line">         <span class="keyword">if</span> (($n &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;  </span><br><span class="line">             $data_long[$n] = chr(<span class="number">0</span>);  </span><br><span class="line">             $n_data_long++;  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">$this</span>-&gt;_resize($key, <span class="number">16</span>, <span class="keyword">true</span>);  </span><br><span class="line">         <span class="keyword">if</span> ( <span class="string">''</span> == $key )  </span><br><span class="line">             $key = <span class="string">'0000000000000000'</span>;  </span><br><span class="line"> </span><br><span class="line">         $n_key_long = <span class="keyword">$this</span>-&gt;_str2long(<span class="number">0</span>, $key, $key_long);  </span><br><span class="line"> </span><br><span class="line">         $enc_data   = <span class="string">''</span>;  </span><br><span class="line">         $w          = <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">0</span>);  </span><br><span class="line">         $j          = <span class="number">0</span>;  </span><br><span class="line">         $k          = <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);  </span><br><span class="line">         <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $n_data_long; ++$i) &#123;  </span><br><span class="line">             <span class="keyword">if</span> ($j + <span class="number">4</span> &lt;= $n_key_long) &#123;  </span><br><span class="line">                 $k[<span class="number">0</span>] = $key_long[$j];  </span><br><span class="line">                 $k[<span class="number">1</span>] = $key_long[$j + <span class="number">1</span>];  </span><br><span class="line">                 $k[<span class="number">2</span>] = $key_long[$j + <span class="number">2</span>];  </span><br><span class="line">                 $k[<span class="number">3</span>] = $key_long[$j + <span class="number">3</span>];  </span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                 $k[<span class="number">0</span>] = $key_long[$j % $n_key_long];  </span><br><span class="line">                 $k[<span class="number">1</span>] = $key_long[($j + <span class="number">1</span>) % $n_key_long];  </span><br><span class="line">                 $k[<span class="number">2</span>] = $key_long[($j + <span class="number">2</span>) % $n_key_long];  </span><br><span class="line">                 $k[<span class="number">3</span>] = $key_long[($j + <span class="number">3</span>) % $n_key_long];  </span><br><span class="line">             &#125;  </span><br><span class="line">             $j = ($j + <span class="number">4</span>) % $n_key_long;  </span><br><span class="line"> </span><br><span class="line">             <span class="keyword">$this</span>-&gt;_encipherLong($data_long[$i], $data_long[++$i], $w, $k);  </span><br><span class="line"> </span><br><span class="line">             $enc_data .= <span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">0</span>]);  </span><br><span class="line">             $enc_data .= <span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">1</span>]);  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">return</span> $enc_data;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($enc_data, $key)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $n_enc_data_long = <span class="keyword">$this</span>-&gt;_str2long(<span class="number">0</span>, $enc_data, $enc_data_long);  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">$this</span>-&gt;_resize($key, <span class="number">16</span>, <span class="keyword">true</span>);  </span><br><span class="line">         <span class="keyword">if</span> ( <span class="string">''</span> == $key )  </span><br><span class="line">             $key = <span class="string">'0000000000000000'</span>;  </span><br><span class="line"> </span><br><span class="line">         $n_key_long = <span class="keyword">$this</span>-&gt;_str2long(<span class="number">0</span>, $key, $key_long);  </span><br><span class="line"> </span><br><span class="line">         $data   = <span class="string">''</span>;  </span><br><span class="line">         $w      = <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">0</span>);  </span><br><span class="line">         $j      = <span class="number">0</span>;  </span><br><span class="line">         $len    = <span class="number">0</span>;  </span><br><span class="line">         $k      = <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);  </span><br><span class="line">         $pos    = <span class="number">0</span>;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $n_enc_data_long; $i += <span class="number">2</span>) &#123;  </span><br><span class="line">             <span class="keyword">if</span> ($j + <span class="number">4</span> &lt;= $n_key_long) &#123;  </span><br><span class="line">                 $k[<span class="number">0</span>] = $key_long[$j];  </span><br><span class="line">                 $k[<span class="number">1</span>] = $key_long[$j + <span class="number">1</span>];  </span><br><span class="line">                 $k[<span class="number">2</span>] = $key_long[$j + <span class="number">2</span>];  </span><br><span class="line">                 $k[<span class="number">3</span>] = $key_long[$j + <span class="number">3</span>];  </span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                 $k[<span class="number">0</span>] = $key_long[$j % $n_key_long];  </span><br><span class="line">                 $k[<span class="number">1</span>] = $key_long[($j + <span class="number">1</span>) % $n_key_long];  </span><br><span class="line">                 $k[<span class="number">2</span>] = $key_long[($j + <span class="number">2</span>) % $n_key_long];  </span><br><span class="line">                 $k[<span class="number">3</span>] = $key_long[($j + <span class="number">3</span>) % $n_key_long];  </span><br><span class="line">             &#125;  </span><br><span class="line">             $j = ($j + <span class="number">4</span>) % $n_key_long;  </span><br><span class="line"> </span><br><span class="line">             <span class="keyword">$this</span>-&gt;_decipherLong($enc_data_long[$i], $enc_data_long[$i + <span class="number">1</span>], $w, $k);  </span><br><span class="line"> </span><br><span class="line">             <span class="keyword">if</span> (<span class="number">0</span> == $i) &#123;  </span><br><span class="line">                 $len = $w[<span class="number">0</span>];  </span><br><span class="line">                 <span class="keyword">if</span> (<span class="number">4</span> &lt;= $len) &#123;  </span><br><span class="line">                     $data .= <span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">1</span>]);  </span><br><span class="line">                 &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                     $data .= substr(<span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">1</span>]), <span class="number">0</span>, $len % <span class="number">4</span>);  </span><br><span class="line">                 &#125;  </span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                 $pos = ($i - <span class="number">1</span>) * <span class="number">4</span>;  </span><br><span class="line">                 <span class="keyword">if</span> ($pos + <span class="number">4</span> &lt;= $len) &#123;  </span><br><span class="line">                     $data .= <span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">0</span>]);  </span><br><span class="line"> </span><br><span class="line">                     <span class="keyword">if</span> ($pos + <span class="number">8</span> &lt;= $len) &#123;  </span><br><span class="line">                         $data .= <span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">1</span>]);  </span><br><span class="line">                     &#125; <span class="keyword">elseif</span> ($pos + <span class="number">4</span> &lt; $len) &#123;  </span><br><span class="line">                         $data .= substr(<span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">1</span>]), <span class="number">0</span>, $len % <span class="number">4</span>);  </span><br><span class="line">                     &#125;  </span><br><span class="line">                 &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                     $data .= substr(<span class="keyword">$this</span>-&gt;_long2str($w[<span class="number">0</span>]), <span class="number">0</span>, $len % <span class="number">4</span>);  </span><br><span class="line">                 &#125;  </span><br><span class="line">             &#125;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">return</span> $data;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_encipherLong</span><span class="params">($y, $z, &amp;$w, &amp;$k)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $sum    = (integer) <span class="number">0</span>;  </span><br><span class="line">         $delta  = <span class="number">0x9E3779B9</span>;  </span><br><span class="line">         $n      = (integer) <span class="keyword">$this</span>-&gt;n_iter;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">while</span> ($n-- &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">             $y      = <span class="keyword">$this</span>-&gt;_add($y,  </span><br><span class="line">                                   <span class="keyword">$this</span>-&gt;_add($z &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($z, <span class="number">5</span>), $z) ^  </span><br><span class="line">                                     <span class="keyword">$this</span>-&gt;_add($sum, $k[$sum &amp; <span class="number">3</span>]));  </span><br><span class="line">             $sum    = <span class="keyword">$this</span>-&gt;_add($sum, $delta);  </span><br><span class="line">             $z      = <span class="keyword">$this</span>-&gt;_add($z,  </span><br><span class="line">                                   <span class="keyword">$this</span>-&gt;_add($y &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($y, <span class="number">5</span>), $y) ^  </span><br><span class="line">                                     <span class="keyword">$this</span>-&gt;_add($sum, $k[<span class="keyword">$this</span>-&gt;_rshift($sum, <span class="number">11</span>) &amp; <span class="number">3</span>]));  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         $w[<span class="number">0</span>] = $y;  </span><br><span class="line">         $w[<span class="number">1</span>] = $z;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_decipherLong</span><span class="params">($y, $z, &amp;$w, &amp;$k)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $sum    = <span class="number">0xC6EF3720</span>;  </span><br><span class="line">         $delta  = <span class="number">0x9E3779B9</span>;  </span><br><span class="line">         $n      = (integer) <span class="keyword">$this</span>-&gt;n_iter;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">while</span> ($n-- &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">             $z      = <span class="keyword">$this</span>-&gt;_add($z,  </span><br><span class="line">                                   -(<span class="keyword">$this</span>-&gt;_add($y &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($y, <span class="number">5</span>), $y) ^  </span><br><span class="line">                                         <span class="keyword">$this</span>-&gt;_add($sum, $k[<span class="keyword">$this</span>-&gt;_rshift($sum, <span class="number">11</span>) &amp; <span class="number">3</span>])));  </span><br><span class="line">             $sum    = <span class="keyword">$this</span>-&gt;_add($sum, -$delta);  </span><br><span class="line">             $y      = <span class="keyword">$this</span>-&gt;_add($y,  </span><br><span class="line">                                   -(<span class="keyword">$this</span>-&gt;_add($z &lt;&lt; <span class="number">4</span> ^ <span class="keyword">$this</span>-&gt;_rshift($z, <span class="number">5</span>), $z) ^  </span><br><span class="line">                                         <span class="keyword">$this</span>-&gt;_add($sum, $k[$sum &amp; <span class="number">3</span>])));  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         $w[<span class="number">0</span>] = $y;  </span><br><span class="line">         $w[<span class="number">1</span>] = $z;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_resize</span><span class="params">(&amp;$data, $size, $nonull = false)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $n      = strlen($data);  </span><br><span class="line">         $nmod   = $n % $size;  </span><br><span class="line">         <span class="keyword">if</span> ( <span class="number">0</span> == $nmod )  </span><br><span class="line">             $nmod = $size;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> ($nmod &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">             <span class="keyword">if</span> ($nonull) &#123;  </span><br><span class="line">                 <span class="keyword">for</span> ($i = $n; $i &lt; $n - $nmod + $size; ++$i) &#123;  </span><br><span class="line">                     $data[$i] = $data[$i % $n];  </span><br><span class="line">                 &#125;  </span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                 <span class="keyword">for</span> ($i = $n; $i &lt; $n - $nmod + $size; ++$i) &#123;  </span><br><span class="line">                     $data[$i] = chr(<span class="number">0</span>);  </span><br><span class="line">                 &#125;  </span><br><span class="line">             &#125;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">return</span> $n;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_hex2bin</span><span class="params">($str)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $len = strlen($str);  </span><br><span class="line">         <span class="keyword">return</span> pack(<span class="string">'H'</span> . $len, $str);  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_str2long</span><span class="params">($start, &amp;$data, &amp;$data_long)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $n = strlen($data);  </span><br><span class="line"> </span><br><span class="line">         $tmp    = unpack(<span class="string">'N*'</span>, $data);  </span><br><span class="line">         $j      = $start;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">foreach</span> ($tmp <span class="keyword">as</span> $value)  </span><br><span class="line">             $data_long[$j++] = $value;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">return</span> $j;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_long2str</span><span class="params">($l)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         <span class="keyword">return</span> pack(<span class="string">'N'</span>, $l);  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_rshift</span><span class="params">($integer, $n)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         <span class="keyword">if</span> (<span class="number">0xffffffff</span> &lt; $integer || <span class="number">-0xffffffff</span> &gt; $integer) &#123;  </span><br><span class="line">             $integer = fmod($integer, <span class="number">0xffffffff</span> + <span class="number">1</span>);  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (<span class="number">0x7fffffff</span> &lt; $integer) &#123;  </span><br><span class="line">             $integer -= <span class="number">0xffffffff</span> + <span class="number">1.0</span>;  </span><br><span class="line">         &#125; <span class="keyword">elseif</span> (<span class="number">-0x80000000</span> &gt; $integer) &#123;  </span><br><span class="line">             $integer += <span class="number">0xffffffff</span> + <span class="number">1.0</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (<span class="number">0</span> &gt; $integer) &#123;  </span><br><span class="line">             $integer &amp;= <span class="number">0x7fffffff</span>;  </span><br><span class="line">             $integer &gt;&gt;= $n;  </span><br><span class="line">             $integer |= <span class="number">1</span> &lt;&lt; (<span class="number">31</span> - $n);  </span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">             $integer &gt;&gt;= $n;  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">return</span> $integer;  </span><br><span class="line">     &#125;  </span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">_add</span><span class="params">($i1, $i2)</span>  </span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         $result = <span class="number">0.0</span>;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">foreach</span> (func_get_args() <span class="keyword">as</span> $value) &#123;  </span><br><span class="line">             <span class="keyword">if</span> (<span class="number">0.0</span> &gt; $value) &#123;  </span><br><span class="line">                 $value -= <span class="number">1.0</span> + <span class="number">0xffffffff</span>;  </span><br><span class="line">             &#125;  </span><br><span class="line"> </span><br><span class="line">             $result += $value;  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (<span class="number">0xffffffff</span> &lt; $result || <span class="number">-0xffffffff</span> &gt; $result) &#123;  </span><br><span class="line">             $result = fmod($result, <span class="number">0xffffffff</span> + <span class="number">1</span>);  </span><br><span class="line">         &#125;  </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (<span class="number">0x7fffffff</span> &lt; $result) &#123;  </span><br><span class="line">             $result -= <span class="number">0xffffffff</span> + <span class="number">1.0</span>;  </span><br><span class="line">         &#125; <span class="keyword">elseif</span> (<span class="number">-0x80000000</span> &gt; $result) &#123;  </span><br><span class="line">             $result += <span class="number">0xffffffff</span> + <span class="number">1.0</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">return</span> $result;  </span><br><span class="line">     &#125;  </span><br><span class="line"> &#125;  </span><br><span class="line"> <span class="meta">?&gt;</span> </span><br><span class="line">使用方法参考如下：</span><br><span class="line"><span class="comment">// 加密过程</span></span><br><span class="line">view sourceprint?</span><br><span class="line"> $text_file = S_ROOT . <span class="string">'./456.php'</span>;  </span><br><span class="line"> $str = @file_get_contents($text_file);  </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">require_once</span> S_ROOT . <span class="string">"./text_auth.php"</span>;  </span><br><span class="line"> $text_auth = <span class="keyword">new</span> text_auth(<span class="number">64</span>);  </span><br><span class="line"> </span><br><span class="line"> $str = $text_auth-&gt;encrypt($str, <span class="string">"qianyunlai.com"</span>);  </span><br><span class="line"> </span><br><span class="line"> $filename = S_ROOT . <span class="string">'./789.php'</span>; <span class="comment">// 加密后的文本为二进制，普通的文本编辑器无法正常查看  </span></span><br><span class="line"> file_put_contents($filename, $str); </span><br><span class="line"><span class="comment">// 解密过程</span></span><br><span class="line">view sourceprint</span><br><span class="line">?<span class="number">01</span> $text_file = S_ROOT . <span class="string">'./789.php'</span>;  </span><br><span class="line"> $str = @file_get_contents($text_file);  </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">require_once</span> S_ROOT . <span class="string">"./text_auth.php"</span>;  </span><br><span class="line"> $text_auth = <span class="keyword">new</span> text_auth(<span class="number">64</span>);  </span><br><span class="line"> </span><br><span class="line"> $str = $text_auth-&gt;decrypt($str, <span class="string">"qianyunlai.com"</span>);  </span><br><span class="line"> </span><br><span class="line"> $filename = S_ROOT . <span class="string">'./456.php'</span>;  </span><br><span class="line"> file_put_contents($filename, $str);</span><br></pre></td></tr></table></figure></p>
<p>该方法可以对文本的内容进行 二进制加密 与 解密。</p>
<p>以上几种方法各有各的优点和用处，大家也选择使用</p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 加密 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker的基本操作]]></title>
      <url>/2018/01/31/Docker%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<blockquote>
<p>今天是公司2018年的年会，地点定在渝中区大礼堂，下午1点30开始，上午几乎所有的小伙伴都按捺不住自己内心澎湃的心一心准备参加公司的年会，不知道是不是做程序员做久了，还是说早已习惯了公司的”套路”，不觉得年会有什么新鲜感和吸引我的地方，当然说句实话，年会对我吸引最大的肯定是抽奖环节，据说今年的终极大奖是现金10万；趁着这么还有点时间，更新下自己的博客吧<br>使用Docker还是蛮久的了，但对于我来时，基本都是针对于开发搭建环境使用，所以也就只会一些基本的使用，要想看深入讲解的，请绕道咯。</p>
</blockquote>
<h2 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h2><h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><p>Docker是一个开源平台，用于自动化部署应用，以通过快捷的途径在称之为容器的轻量级软件层下打包、发布和运行这些应用。它使得应用平台独立，因为它扮演了Linux上一个额外的操作系统级虚拟化的自动化抽象层。它通过其组件cgroups和命名空间利用Linux内核的资源分离特性，达到避免虚拟机开销的目的。它使得用于部署和扩展web应用、数据库和后端服务的大规模构建组件无需依赖于特定的堆栈或供应者。</p>
<h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><p>所谓的容器，就是那些创建自Docker镜像的软件层，它包含了独立的Linux文件系统和开箱即用的应用程序。如果我们有一个在机器中运行着的Docker容器，并且想要备份这些容器以便今后使用，或者想要迁移这些容器，那么，本教程将帮助你掌握在Linux操作系统中备份、恢复和迁移Docker容器的方法</p>
<h2 id="使用及介绍"><a href="#使用及介绍" class="headerlink" title="使用及介绍"></a>使用及介绍</h2><h4 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h4><p>显示docker系统信息<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure></p>
<p>镜像搜索<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search  php</span><br></pre></td></tr></table></figure></p>
<p><img src="http://oymkn4m7b.bkt.clouddn.com/WX20180131-095807@2x.png" alt="image"><br>获取镜像<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull richarvey/nginx-php-fpm (需要哪个就pull哪个)</span><br></pre></td></tr></table></figure></p>
<p>导入本地镜像<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &gt; ~/Users/xiexiang/Downloads/[镜像名]</span><br></pre></td></tr></table></figure></p>
<p>查看镜像<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></p>
<p>显示镜像的历史<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker history</span><br></pre></td></tr></table></figure></p>
<p>删除镜像<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f richarvey/nginx-php-fpm   (带f据说不会残留垃圾)</span><br></pre></td></tr></table></figure></p>
<p>创建容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p <span class="number">80</span>:<span class="number">80</span> --name php-zzgg-un -v /Users/xiexiang/myproject/bajieke:/<span class="keyword">var</span>/www/html registry.alauda.cn/neucloud/nginx-php-fpm:latest</span><br></pre></td></tr></table></figure></p>
<p>查看容器(全部)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></p>
<p><img src="http://oymkn4m7b.bkt.clouddn.com/WX20180131-102524@2x.png" alt="images"><br>查看已运行容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure></p>
<p>删除容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f [容器id]</span><br></pre></td></tr></table></figure></p>
<p>进入到容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it [容器名] bash</span><br></pre></td></tr></table></figure></p>
<p>启动容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start [容器名]</span><br></pre></td></tr></table></figure></p>
<p>停止容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop [容器名]</span><br></pre></td></tr></table></figure></p>
<p>重启容器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart [容器名]</span><br></pre></td></tr></table></figure></p>
<h4 id="容器的导出导入功能"><a href="#容器的导出导入功能" class="headerlink" title="容器的导出导入功能"></a>容器的导出导入功能</h4><p>1、停止容器(也可以不停止，只要下一步commit成功即可)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop [容器名]</span><br></pre></td></tr></table></figure></p>
<p>2、将容器commit为镜像<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker commit ec1f968cc0d0 php-zzgg-un   (容器id  自定义镜像名)</span><br><span class="line">```` </span><br><span class="line">查看生成的镜像</span><br><span class="line">````php</span><br><span class="line">docker images</span><br></pre></td></tr></table></figure></p>
<p>3、save镜像为tar文件<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o /Users/xiexiang/Downloads/php-zzgg-un.tar  php-zzgg-un</span><br></pre></td></tr></table></figure></p>
<p>4、将tar文件scp到 目标docker主机<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp php-zzgg-un.tar root@<span class="number">10.45</span><span class="number">.7</span><span class="number">.197</span>:/docker</span><br></pre></td></tr></table></figure></p>
<p>5、导入本地镜像</p>
<pre><code class="php">docker load /Users/xiexiang/Downloads/php-zzgg-un.tar
</code></pre>
]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建的博客如何给文章分类（NEXT主题）]]></title>
      <url>/2018/01/25/hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E7%BB%99%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%EF%BC%88NEXT%E4%B8%BB%E9%A2%98%EF%BC%89/</url>
      <content type="html"><![CDATA[<h4 id="tags："><a href="#tags：" class="headerlink" title="tags："></a>tags：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">- 前端</span><br><span class="line">- hexo</span><br><span class="line">categories: </span><br><span class="line">- 前端</span><br></pre></td></tr></table></figure>
<p>在博客根目录输入<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page tags</span><br></pre></td></tr></table></figure></p>
<p>打开 <code>tags/index.md</code> ，并改成：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 日期</span><br><span class="line">type: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="keyword">false</span></span><br></pre></td></tr></table></figure></p>
<h4 id="分类（同理）"><a href="#分类（同理）" class="headerlink" title="分类（同理）"></a>分类（同理）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page categories</span><br></pre></td></tr></table></figure>
<p>打开<code>category/index.md</code>，改为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 日期</span><br><span class="line">type: <span class="string">"categories"</span></span><br><span class="line">comments: <span class="keyword">false</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> HEXO </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[远程即时修改微信菜单]]></title>
      <url>/2018/01/24/%E8%BF%9C%E7%A8%8B%E5%8F%8A%E6%97%B6%E4%BF%AE%E6%94%B9%E5%BE%AE%E4%BF%A1%E8%8F%9C%E5%8D%95/</url>
      <content type="html"><![CDATA[<p>场景：</p>
<blockquote>
<p>某天程序员A加班加点完成了本次微信项目的迭代工作，在使用全身解数之后终于盼来了上线的等待，当然，后面也是成功上线了，但是项目经理在看过线上项目之后，才发现程序员A在微信后台修改的操作菜单并没有生效，当然程序员A也知道，这个生效要等一小时左右，但是项目经理急了，’我马上要给客户看，怎么能等待生效’。</p>
</blockquote>
<p>这是一个线上执行的单文件，如有需要拆分成各个板块形成方法，可以自行去改。<br>直接执行以下代码能即时修改微信菜单，比微信后台修改操作快很多。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">$appid = <span class="string">"xxxxxxx"</span>;          <span class="comment">//微信appid</span></span><br><span class="line">$appsecret = <span class="string">"xxxxxxxxxxx"</span>;  <span class="comment">//微信secret_id</span></span><br><span class="line">$url = <span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=$appid&amp;secret=$appsecret"</span>;</span><br><span class="line">$host = <span class="string">"http://xxxxxx.com"</span>;  <span class="comment">//站点域名</span></span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">$output = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">$jsoninfo = json_decode($output, <span class="keyword">true</span>);</span><br><span class="line">$access_token = $jsoninfo[<span class="string">"access_token"</span>];</span><br><span class="line"></span><br><span class="line">header(<span class="string">"Content-type: text/html; charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//创建菜单</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createMenu</span><span class="params">($data, $access_token)</span></span>&#123;</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, <span class="string">"https://api.weixin.qq.com/cgi-bin/menu/create?access_token="</span>.$access_token);</span><br><span class="line">    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, <span class="string">"POST"</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_USERAGENT, <span class="string">'Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)'</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_AUTOREFERER, <span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">    $tmpInfo = curl_exec($ch);</span><br><span class="line">    <span class="keyword">if</span> (curl_errno($ch)) &#123;</span><br><span class="line">      <span class="keyword">return</span> curl_error($ch);</span><br><span class="line">    &#125;</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    <span class="keyword">return</span> $tmpInfo;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//获取菜单</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> file_get_contents(<span class="string">"https://api.weixin.qq.com/cgi-bin/menu/get?access_token="</span>.ACCESS_TOKEN);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除菜单</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">deleteMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> file_get_contents(<span class="string">"https://api.weixin.qq.com/cgi-bin/menu/delete?access_token="</span>.ACCESS_TOKEN);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $data = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">"button"</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">          <span class="keyword">array</span>(</span><br><span class="line">              <span class="string">"name"</span>=&gt;urlencode(<span class="string">"推广赚钱"</span>),</span><br><span class="line">              <span class="string">"sub_button"</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"首页"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/default/index?needLogin=1&amp;agent_r=agent_wx"</span></span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"做任务"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/proxy/taskHall?agent_r=agent_wx"</span></span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"提商机"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/business/add?agent_r=agent_wx"</span></span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"推广爆品"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/proxy/home?agent_r=agent_wx"</span></span><br><span class="line">                  ),<span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"推广店铺"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/rebateshop/index?agent_r=agent_wx"</span></span><br><span class="line">                  )</span><br><span class="line">              )</span><br><span class="line">          ),</span><br><span class="line">          <span class="keyword">array</span>(</span><br><span class="line">              <span class="string">"name"</span>=&gt;urlencode(<span class="string">"发展下级"</span>),</span><br><span class="line">              <span class="string">"sub_button"</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"发展下级"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/invite/newinviteentershow?agent_r=agent_wx"</span></span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"管理下级"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/partner/mypartner?agent_r=agent_wx"</span></span><br><span class="line">                  )</span><br><span class="line">              )</span><br><span class="line">          ),</span><br><span class="line">          <span class="keyword">array</span>(</span><br><span class="line">              <span class="string">"name"</span>=&gt;urlencode(<span class="string">"我的"</span>),</span><br><span class="line">              <span class="string">"sub_button"</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"收益"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/earnings/BalanceCommission?agent_r=agent_wx"</span></span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"我的店铺"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/shop/detail?agent_r=agent_wx"</span></span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">array</span>(</span><br><span class="line">                      <span class="string">"type"</span>=&gt;<span class="string">"view"</span>,</span><br><span class="line">                      <span class="string">"name"</span>=&gt;urlencode(<span class="string">"个人中心"</span>),</span><br><span class="line">                      <span class="string">"url"</span>=&gt;$host.<span class="string">"/home/ucenter?agent_r=agent_wx"</span></span><br><span class="line">                  )</span><br><span class="line"></span><br><span class="line">              )</span><br><span class="line">          )</span><br><span class="line">      )</span><br><span class="line">  );</span><br><span class="line">  <span class="comment">//转义汉字</span></span><br><span class="line">  $data = json_encode($data);</span><br><span class="line">  $data = urldecode($data);</span><br><span class="line"><span class="keyword">echo</span> $data;<span class="keyword">echo</span> <span class="string">"&lt;br&gt;\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> createMenu($data, $access_token);<span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP中的 抽象类（abstract class）和 接口（interface）]]></title>
      <url>/2017/12/15/PHP%E4%B8%AD%E7%9A%84%20%E6%8A%BD%E8%B1%A1%E7%B1%BB%EF%BC%88abstract%20class%EF%BC%89%E5%92%8C%20%E6%8E%A5%E5%8F%A3%EF%BC%88interface%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="抽象类abstract-class"><a href="#抽象类abstract-class" class="headerlink" title="抽象类abstract class"></a>抽象类abstract class</h2><ul>
<li>抽象类是指在class前加了abstract关键字且存在抽象方法（在类方法function关键字前加了abstract关键字）的类。</li>
<li>抽象类不能被直接实例化。抽象类中只定义（或部分实现）子类需要的方法。子类可以通过继承抽象类并通过实现抽象类中的所有抽象方法，使抽象类具体化。</li>
<li><p>如果子类需要实例化，前提是它实现了抽象类中的所有抽象方法。如果子类没有全部实现抽象类中的所有抽象方法，那么该子类也是一个抽象类，必须在class前面加上abstract关键字，并且不能被实例化。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span>  </span></span><br><span class="line"><span class="class">     </span>&#123;  </span><br><span class="line">         <span class="comment">/** 抽象类中可以定义变量 */</span>  </span><br><span class="line">         <span class="keyword">protected</span> $value1 = <span class="number">0</span>;  </span><br><span class="line">         <span class="keyword">private</span> $value2 = <span class="number">1</span>;  </span><br><span class="line">         <span class="keyword">public</span> $value3 = <span class="number">2</span>;  </span><br><span class="line">         <span class="comment">/** 也可以定义非抽象方法 */</span>  </span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">my_print</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">         </span>&#123;  </span><br><span class="line">             <span class="keyword">echo</span> <span class="string">"hello,world/n"</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="comment">/** </span></span><br><span class="line"><span class="comment">          * 大多数情况下，抽象类至少含有一个抽象方法。抽象方法用abstract关键字声明，其中不能有具体内容。 </span></span><br><span class="line"><span class="comment">          * 可以像声明普通类方法那样声明抽象方法，但是要以分号而不是方法体结束。也就是说抽象方法在抽象类中不能被实现，也就是没有函数体“&#123;some codes&#125;”。 </span></span><br><span class="line"><span class="comment">          */</span>  </span><br><span class="line">         <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func1</span><span class="params">()</span></span>;  </span><br><span class="line">         <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func2</span><span class="params">()</span></span>;  </span><br><span class="line">     &#125;  </span><br><span class="line">     <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span>  </span></span><br><span class="line"><span class="class">     </span>&#123;  </span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func1</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">         </span>&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"implement the abstract_func1 in class A/n"</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="comment">/** 这么写在zend studio 8中会报错*/</span>  </span><br><span class="line">         <span class="comment">//abstract protected function abstract_func2();  </span></span><br><span class="line">     &#125;  </span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span>  </span></span><br><span class="line"><span class="class">     </span>&#123;  </span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func2</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">         </span>&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"implement the abstract_func2 in class A/n"</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果像下面这样创建了一个继承自A的子类B，但是不实现抽象方法abstract_func()：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;&#125;; </span><br><span class="line">``` </span><br><span class="line">那么程序将出现以下错误：</span><br><span class="line">```php</span><br><span class="line">Fatal error: Class B contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (A::abstract_func)</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果B实现了抽象方法abstract_func()，那么B中abstract_func()方法的访问控制不能比A中abstract_func()的访问控制更严格，也就是说：<br>(1)如果A中abstract_func()声明为public，那么B中abstract_func()的声明只能是public，不能是protected或private<br>(2)如果A中abstract_func()声明为protected，那么B中abstract_func()的声明可以是public或protected，但不能是private<br>(3)如果A中abstract_func()声明为private，嘿嘿，不能定义为private哦！（Fatal error: Abstract function A::abstract_func() cannot be declared private）</p>
<h2 id="接口interface"><a href="#接口interface" class="headerlink" title="接口interface"></a>接口interface</h2></li>
<li>抽象类提供了具体实现的标准，而接口则是纯粹的模版。接口只定义功能，而不包含实现的内容。接口用关键字interface来声明。</li>
<li><p>interface是完全抽象的，只能声明方法，而且只能声明public的方法，不能声明private及protected的方法，不能定义方法体，也不能声明实例变量。然而，interface却可以声明常量变量。但将常量变量放在interface中违背了其作为接口的作用而存在的宗旨，也混淆了interface与类的不同价值。如果的确需要，可以将其放在相应的abstract class或Class中。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">interface</span> <span class="title">iA</span>  </span></span><br><span class="line"><span class="class"> </span>&#123;  </span><br><span class="line">     <span class="keyword">const</span> AVAR=<span class="number">3</span>;  </span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc1</span><span class="params">()</span></span>;  </span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc2</span><span class="params">()</span></span>;  </span><br><span class="line"> &#125;  </span><br><span class="line"> <span class="keyword">echo</span> iA:: AVAR;  </span><br><span class="line">``` </span><br><span class="line">* 任何实现接口的类都要实现接口中所定义的所有方法</span><br><span class="line">```php</span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">E</span> <span class="keyword">implements</span> <span class="title">iA</span>  </span></span><br><span class="line"><span class="class"> </span>&#123;  </span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc1</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iAfunc1"</span>;&#125;  </span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc2</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iAfunc2"</span>;&#125;  </span><br><span class="line"> &#125;  </span><br><span class="line">``` </span><br><span class="line">否则该类必须声明为<span class="keyword">abstract</span>。</span><br><span class="line">```php</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">E</span> <span class="keyword">implements</span> <span class="title">iA</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>一个类可以在声明中使用implements关键字来实现某个接口。这么做之后，实现接口的具体过程和继承一个仅包含抽象方法的抽象类是一样的。一个类可以同时继承一个父类和实现任意多个接口。extends子句应该在implements子句之前。PHP只支持继承自一个父类，因此extends关键字后只能跟一个类名。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">iB</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc1</span><span class="params">()</span></span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc2</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">iA</span>,<span class="title">iB</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func1</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"implement the abstract_func1 in class A/n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func2</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"implement the abstract_func2 in class A/n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc1</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iAfunc1"</span>;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc2</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iAfunc2"</span>;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc1</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iBfunc1"</span>;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc2</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iBfunc2"</span>;&#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">iA</span>,<span class="title">iB</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func1</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">       <span class="keyword">parent</span>::abstract_func1();  </span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"override the abstract_func1 in class A/n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstract_func2</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"implement the abstract_func2 in class A/n"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc1</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iAfunc1"</span>;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc2</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iAfunc2"</span>;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc1</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iBfunc1"</span>;&#125;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc2</span><span class="params">()</span></span>&#123;<span class="keyword">echo</span> <span class="string">"in iBfunc2"</span>;&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>接口不可以实现另一个接口，但可以继承多个</p>
<pre><code class="php"><span class="class"><span class="keyword">interface</span> <span class="title">iC</span> <span class="keyword">extends</span> <span class="title">iA</span>,<span class="title">iB</span></span>{}  
<span class="class"><span class="keyword">class</span> <span class="title">F</span> <span class="keyword">implements</span> <span class="title">iC</span>  </span>
<span class="class"></span>{  
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc1</span><span class="params">()</span></span>{<span class="keyword">echo</span> <span class="string">"in iAfunc1"</span>;}  
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iAfunc2</span><span class="params">()</span></span>{<span class="keyword">echo</span> <span class="string">"in iAfunc2"</span>;}  
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc1</span><span class="params">()</span></span>{<span class="keyword">echo</span> <span class="string">"in iBfunc1"</span>;}  
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iBfunc2</span><span class="params">()</span></span>{<span class="keyword">echo</span> <span class="string">"in iBfunc2"</span>;}  
}
</code></pre>
<h2 id="抽象类和接口的异同"><a href="#抽象类和接口的异同" class="headerlink" title="抽象类和接口的异同"></a>抽象类和接口的异同</h2><h4 id="相同点："><a href="#相同点：" class="headerlink" title="相同点："></a>相同点：</h4></li>
<li>两者都是抽象类，都不能实例化。</li>
<li>interface实现类及abstract class的子类都必须要实现已经声明的抽象方法。<h4 id="不同点："><a href="#不同点：" class="headerlink" title="不同点："></a>不同点：</h4><ul>
<li>interface需要实现，要用implements，而abstract class需要继承，要用extends。</li>
<li>一个类可以实现多个interface，但一个类只能继承一个abstract class。</li>
<li>interface强调特定功能的实现，而abstract class强调所属关系。</li>
<li>尽管interface实现类及abstract class的子类都必须要实现相应的抽象方法，但实现的形式不同。interface中的每一个方法都是抽象方法，都只是声明的 (declaration, 没有方法体)，实现类必须要实现。而abstractclass的子类可以有选择地实现。这个选择有两点含义：a) abstract class中并非所有的方法都是抽象的，只有那些冠有abstract的方法才是抽象的，子类必须实现。那些没有abstract的方法，在 abstract class中必须定义方法体；b) abstract class的子类在继承它时，对非抽象方法既可以直接继承，也可以覆盖；而对抽象方法，可以选择实现，也可以留给其子类来实现，但此类必须也声明为抽象类。既是抽象类，当然也不能实例化。</li>
<li>abstract class是interface与class的中介。abstract class在interface及class中起到了承上启下的作用。一方面，abstract class是抽象的，可以声明抽象方法，以规范子类必须实现的功能；另一方面，它又可以定义缺省的方法体，供子类直接使用或覆盖。另外，它还可以定义自己的实例变量，以供子类通过继承来使用。</li>
</ul>
</li>
<li>接口中的抽象方法前不用也不能加abstract关键字，默认隐式就是抽象方法，也不能加final关键字来防止抽象方法的继承。而抽象类中抽象方法前则必须加上abstract表示显示声明为抽象方法。</li>
<li>接口中的抽象方法默认是public的，也只能是public的，不能用private，protected修饰符修饰。而抽象类中的抽象方法则可以用public，protected来修饰，但不能用private。<h4 id="interface的应用场合"><a href="#interface的应用场合" class="headerlink" title="interface的应用场合"></a>interface的应用场合</h4></li>
<li>类与类之间需要特定的接口进行协调，而不在乎其如何实现。</li>
<li>作为能够实现特定功能的标识存在，也可以是什么接口方法都没有的纯粹标识。</li>
<li>需要将一组类视为单一的类，而调用者只通过接口来与这组类发生联系。</li>
<li>需要实现特定的多项功能，而这些功能之间可能完全没有任何联系。<h4 id="abstract-class的应用场合"><a href="#abstract-class的应用场合" class="headerlink" title="abstract class的应用场合"></a>abstract class的应用场合</h4>一句话，在既需要统一的接口，又需要实例变量或缺省的方法的情况下，就可以使用它。最常见的有：</li>
<li>定义了一组接口，但又不想强迫每个实现类都必须实现所有的接口。可以用abstract class定义一组方法体，甚至可以是空方法体，然后由子类选择自己所感兴趣的方法来覆盖。</li>
<li>某些场合下，只靠纯粹的接口不能满足类与类之间的协调，还必需类中表示状态的变量来区别不同的关系。abstract的中介作用可以很好地满足这一点。</li>
<li>规范了一组相互协调的方法，其中一些方法是共同的，与状态无关的，可以共享的，无需子类分别实现；而另一些方法却需要各个子类根据自己特定的状态来实现特定的功能 。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[http中的referer]]></title>
      <url>/2017/11/24/http%E4%B8%AD%E7%9A%84referer/</url>
      <content type="html"><![CDATA[<blockquote>
<p>安全培训中提到可以通过referer判断安全性，hackbar中也有一个enable referer的选项，则，这个referer到底是个什么角色？</p>
</blockquote>
<p>在http请求的Headers部分可见Referer.</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer http:<span class="comment">//www.baidu.com/s?tn=98835442_hao_pg&amp;ie=utf-8&amp;f=3&amp;wd=126.com&amp;oq=126.&amp;bs=126.com&amp;rsv_bp=1&amp;inputT=5799&amp;rsp=0</span></span><br></pre></td></tr></table></figure>
<p>Http协议头中的Referer主要用来让服务器判断来源页面, 即用户是从哪个页面来的,通常被网站用来统计用户来源,是从搜索页面来的,还是从其他网站链接过来,或是从书签等访问,以便网站合理定位.</p>
<p>Referer有时也被用作防盗链, 即下载时判断来源地址是不是在网站域名之内, 否则就不能下载或显示,很多网站,如天涯就是通过Referer页面来判断用户是否能够下载图片</p>
<p>当然,对于某些恶意用户,也可能伪造Referer来获得某些权限,在设计网站时要考虑到这个问题.</p>
<p>还可用做电子商务网站的安全，在提交信用卡等重要信息的页面用referer来判断上一页是不是自己的网站，如果不是，可能是黑客用自己写的一个表单，来提交，为了能跳过你上一页里的javascript的验证等目的。</p>
<p><code>但是注意不要把Rerferer用在身份验证或者其他非常重要的检查上，因为Rerferer非常容易在客户端被改变。</code></p>
<p>（火狐的一个插件RefControl修改Referer引用）</p>
<p>对浏览器来说,一般以下几种情况是不会发送Referer,因为可能有潜在的安全问题:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>用户手动输入网址或是从收藏夹/书签中访问.</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>页面从Https跳转到Http；应该是处于安全考虑，该点在RFC<span class="number">-2616</span>中有说明；主流浏览器均遵守这个规则，比如IE、FF；但默认情况下Https到Https是会发送Referer的</span><br><span class="line">安全问题在于有可能把地址中含有的一些关于用户的敏感信息发送到其他恶意网站上.</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、由于FF提供了很强大的自定义参数设置功能，所以我们可以通过about:config页面修改以下两个选项的默认设置：</span><br><span class="line">network.http.sendRefererHeader (<span class="keyword">default</span>=<span class="number">2</span>)</span><br><span class="line">设置Referer的发送方式，<span class="number">0</span>为完全不发送，<span class="number">1</span>为只在点击链接时发送，在访问页面中的图像什么的时候不发送，<span class="number">2</span>为始终发送。</span><br></pre></td></tr></table></figure>
<p>参考： <a href="http://blog.csdn.net/mutsinghua/article/details/5187595" target="_blank" rel="noopener">http://blog.csdn.net/mutsinghua/article/details/5187595</a>  </p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> referer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP编程]]></title>
      <url>/2017/11/23/PHP%E7%BC%96%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">array_chunk($array, $size): 将数组按size大小分为多个数组</span><br><span class="line">array_diff($a, $b): 比较数组的不同，可以用来判断两个数组是否相等，需要注意的是这里返回的是在array1中但是不在array2中的值，而不是两个的交集</span><br><span class="line">array_key_exists(<span class="string">"key"</span>,$a)  <span class="comment"># 查看key是否存在于某个字典</span></span><br><span class="line">array_intersect($array1, $array2[,$array $...])	<span class="comment"># 返回一个数组，该数组包含了所有在array1同时也出现在其他参数数组中的值</span></span><br><span class="line">array_merge()			<span class="comment"># 合并数组，相同的key直接覆盖</span></span><br><span class="line">array_merge_recursive()	<span class="comment"># 合并数组，相同的key不覆盖</span></span><br><span class="line">array_push($source, <span class="string">"red"</span>, <span class="string">"gree"</span>)	<span class="comment"># 给数组添加元素</span></span><br><span class="line">array_search(): 搜索一个key的索引，如果是二维的数组，那么就是通过value搜索key</span><br><span class="line">array_search(strtolower($search), array_map(<span class="string">'strtolower'</span>, $array)): array_search忽略大小写</span><br><span class="line">array_slice($arr, <span class="number">0</span>, <span class="number">1</span>) <span class="comment"># 数组分片</span></span><br><span class="line">array_sum($arr): 计算数组中所有值的和</span><br><span class="line">array_values($arr): 获取数组所有的value值</span><br><span class="line">  </span><br><span class="line">count()函数：输出数组的长度</span><br><span class="line"><span class="keyword">empty</span>()函数：判断数组是否为空</span><br><span class="line">end()		<span class="comment">// 返回当前数组的最后一个值，需要注意的是这个函数不仅仅是返回最后一个值，还会把数组当前的指针指向最后一个数据</span></span><br><span class="line">explode(<span class="string">','</span>, $str)	<span class="comment"># 将字符串分割为数组	</span></span><br><span class="line">implode(<span class="string">','</span>, $arr)	<span class="comment"># 将数组拼接成字符串</span></span><br><span class="line">in_array(<span class="string">'a'</span>, $a)				<span class="comment"># 查看数组是否存在某个元素</span></span><br><span class="line">json_encode($arr)	<span class="comment"># 数组转换城字符串</span></span><br><span class="line"><span class="keyword">list</span>($a, $b) = [<span class="number">1</span>, <span class="number">2</span>]	<span class="comment"># 分别赋值</span></span><br><span class="line">rsort(): 以降序对数组排序</span><br><span class="line">sort();		<span class="comment"># 排序，可以给数组排序，会修改原来数组的值</span></span><br><span class="line">uasort($array, $cmp_function)	<span class="comment"># 定义对比函数进行排序</span></span><br><span class="line"><span class="keyword">unset</span>(arr[<span class="number">1</span>]): 删除数组元素</span><br><span class="line"><span class="comment"># 数组遍历</span></span><br><span class="line"><span class="keyword">foreach</span>($array <span class="keyword">as</span> $value): 数组遍历</span><br><span class="line"><span class="keyword">foreach</span>($array <span class="keyword">as</span> $key =&gt; $value): 数组(字典)遍历</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 数组用于函数</span></span><br><span class="line">func(*<span class="keyword">list</span>): 将数组作为函数的输入</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 在数组里面添加数组元素，在不确定key的情况下</span></span><br><span class="line">$arr = [];</span><br><span class="line">$arr[<span class="string">'a'</span>][] = <span class="string">'a'</span>;</span><br><span class="line">$arr[<span class="string">'a'</span>][] = <span class="string">'b'</span>;</span><br></pre></td></tr></table></figure>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>PHP里面单引号和双引号确实有些地方的用法是不同的，比如匹配换行符的时候<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">json_decode(string, $assoc=<span class="keyword">false</span>)	<span class="comment"># 将字符串转换为json对象,$assoc=true时返回array而不是object</span></span><br><span class="line">lcfirst($str)			<span class="comment"># 将字符串首字母转换为小写</span></span><br><span class="line">mb_strlen($str, <span class="string">'utf-8'</span>) <span class="comment"># 求中文字符串长度</span></span><br><span class="line">mb_substr($str, $start, $length, <span class="string">'utf-8'</span>): 字符串分割，可以分割中文哟，如果要获得所有右边的，那么$length不用填或者填上<span class="keyword">NULL</span>，如果版本不行那就是用功能弱一点的substr</span><br><span class="line">nl2br() <span class="comment"># 将字符串中的\n转换成网页的换行符&lt;br&gt;</span></span><br><span class="line">sprintf()	<span class="comment"># 字符串格式化，需要注意的是，它不是用\转义，而是用的%来转义</span></span><br><span class="line">strlen() <span class="comment"># 求字符串长度</span></span><br><span class="line">strpos(<span class="string">'abc'</span>, <span class="string">'a'</span>); 	<span class="comment"># 在字符串中查找第一次出现位置，没找到返回false</span></span><br><span class="line">str_repeat(<span class="string">'abc'</span>, n)	<span class="comment"># 将字符串重复n次</span></span><br><span class="line">str_replace(搜索值，替换值，目标)	<span class="comment"># 字符串替换</span></span><br><span class="line">str_replace(<span class="string">"\n"</span>, <span class="string">""</span>, $content);	<span class="comment"># 去除换行符</span></span><br><span class="line">substr_count($haystack, $needle, [$offset, $length]);	<span class="comment"># 计算子字符串needle在字符串haystack中出现的次数</span></span><br><span class="line">trim($string);	<span class="comment"># 去除字符串前后的空白字符，如果要去除所有的字符只能使用preg_replace('/\s+/', '', $string)，这是stackoverflow上面给出的答案</span></span><br><span class="line">$a . $b . <span class="string">'abc'</span>:字符串连接直接用点号</span><br><span class="line">explode(<span class="string">','</span>, $str, [$limit])	<span class="comment"># 字符串分割，第三个参数大于0表示限制分组数量，limit规定所返回的数组元素的个数，小于0时，返回包含除了最后的-limit个元素以外的所有元素的数组；0表示返回包含一个元素的数组</span></span><br><span class="line">array_map(<span class="string">'strrev'</span>, explode(<span class="string">'-'</span>, strrev($a), <span class="number">2</span>))	<span class="comment"># 字符串分割，逆向</span></span><br><span class="line">iconv(<span class="string">'utf-8'</span>, <span class="string">'GBK'</span>, $data): 将字符编码从utf<span class="number">-8</span>转换为GBK</span><br><span class="line">join(<span class="string">"&amp;"</span>, $arr)	<span class="comment"># 拼接字符串</span></span><br><span class="line">parse_str(<span class="string">'name=wang&amp;age=18'</span>): 从查询字符串中解析到变量，可以得到$name和$age两个变量</span><br><span class="line">parse_url($url): 解析url成数组，与http_build_query()功能相反</span><br><span class="line">preg_replace(<span class="string">'/user_id=\d+&amp;name=/'</span>, <span class="string">'user_id='</span> . <span class="number">1048</span> . <span class="string">'&amp;name='</span>, $code): 正则替换</span><br><span class="line">preg_replace_callback(<span class="string">'//'</span>, <span class="function"><span class="keyword">function</span><span class="params">($matches)</span></span>&#123;<span class="keyword">return</span> strtolower($matchs[<span class="number">0</span>])&#125;: 执行一个正则表达式搜索并且使用一个回调函数进行替换</span><br><span class="line">preg_match(<span class="string">'/Chongqing(?&lt;right&gt;.*)/'</span>, $string, $matches): 正则匹配，pattern参数前后必须加斜杠</span><br><span class="line">sprintf(<span class="string">"sahgoiahg%s"</span>, $a): 格式化输出</span><br><span class="line">strtolower($str)/strtoupper($str): 大小写字符串</span><br><span class="line">ucfirst($str): 将字符串首字母大写</span><br><span class="line">ucwords($str): 将字符串每个单词首字母大写</span><br><span class="line">                      </span><br><span class="line">str_replace(<span class="string">' '</span>, <span class="string">''</span>, lcfirst(ucwords(str_replace([<span class="string">'-'</span>, <span class="string">'_'</span>], <span class="string">' '</span>, $str))));	<span class="comment"># 字符串转换为驼峰命名法</span></span><br></pre></td></tr></table></figure></p>
<h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ceil()函数：向上取整</span><br><span class="line">rand(min, max)：产生随机数，不需要给初始值了现在</span><br><span class="line">intval($val): 字符串转整数，如果不是数字型字符串，那么转换会失败，失败后返回<span class="number">0</span>，没错是<span class="number">0</span>，mmp</span><br><span class="line">int ip2long(string $ip_address)：IP转换成整数值</span><br><span class="line">string long2ip(string $proper_address)：整数值转换成IP</span><br><span class="line">number_format(float $number)	<span class="comment">// 以千位分隔符方式格式化一个数字，返回字符串</span></span><br><span class="line">sprintf(<span class="string">'%04d'</span>, <span class="number">2</span>)	<span class="comment">// 数字前补零</span></span><br></pre></td></tr></table></figure>
<h4 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">time(): 获取当前时间戳</span><br><span class="line">strtotime(<span class="string">''</span>): 字符串转换为时间戳</span><br><span class="line">gmdate(<span class="string">"Y-m-d\TH:i:s\Z"</span>): 获取GMT时区的时间</span><br><span class="line">$beginToday=mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>),date(<span class="string">'Y'</span>)):获取今天开始时的时间戳</span><br><span class="line">$endToday=mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)+<span class="number">1</span>,date(<span class="string">'Y'</span>))<span class="number">-1</span>:获取今天结束时的时间戳</span><br><span class="line">$beginYesterday=mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)<span class="number">-1</span>,date(<span class="string">'Y'</span>))：获取昨天开始时的时间戳</span><br><span class="line">$endYesterday=mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>),date(<span class="string">'Y'</span>))<span class="number">-1</span>：获取昨天结束时的时间戳</span><br><span class="line">$beginLastweek=mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)-date(<span class="string">'w'</span>)+<span class="number">1</span><span class="number">-7</span>,date(<span class="string">'Y'</span>))：获取上周开始时的时间戳</span><br><span class="line">$endLastweek=mktime(<span class="number">23</span>,<span class="number">59</span>,<span class="number">59</span>,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)-date(<span class="string">'w'</span>)+<span class="number">7</span><span class="number">-7</span>,date(<span class="string">'Y'</span>))：获取上周结束时的时间戳</span><br><span class="line">$beginThismonth=mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,date(<span class="string">'m'</span>),<span class="number">1</span>,date(<span class="string">'Y'</span>))：获取本月开始时的时间戳</span><br><span class="line">$endThismonth=mktime(<span class="number">23</span>,<span class="number">59</span>,<span class="number">59</span>,date(<span class="string">'m'</span>),date(<span class="string">'t'</span>),date(<span class="string">'Y'</span>))：获取本月结束时的时间戳</span><br><span class="line"><span class="comment"># 单独获取当前的年、月、日、时、分、秒等</span></span><br><span class="line">date(<span class="string">'Y-m-d H:i:s'</span>); <span class="comment">// 如果要单独获取或者修改格式，那么直接按照里面的格式修改即可</span></span><br><span class="line"><span class="comment"># 输出指定格式</span></span><br><span class="line">date(<span class="string">'Y-m-d H:i'</span>, time())</span><br><span class="line"><span class="comment"># 时间的表示</span></span><br><span class="line">d: 月份中的第几天，有前导零的<span class="number">2</span>位数字，<span class="number">01</span>到<span class="number">31</span></span><br><span class="line">D: 星期中的第几天，文本表示，<span class="number">3</span>个字母，Mon 到 Sun</span><br><span class="line">j: 月份中的第几天，没有前导零，<span class="number">1</span> 到 <span class="number">31</span></span><br><span class="line">l:（“L”的小写字母），星期几，完整的文本格式	Sunday 到 Saturday</span><br><span class="line">N: ISO<span class="number">-8601</span> 格式数字表示的星期中的第几天（PHP <span class="number">5.1</span><span class="number">.0</span> 新加），<span class="number">1</span>（表示星期一）到 <span class="number">7</span>（表示星期天）</span><br><span class="line">S: 每月天数后面的英文后缀，<span class="number">2</span> 个字符，st，nd，rd 或者 th。可以和 j 一起用</span><br><span class="line">w: 星期中的第几天，数字表示	<span class="number">0</span>（表示星期天）到 <span class="number">6</span>（表示星期六）</span><br><span class="line">z: 年份中的第几天	<span class="number">0</span> 到 <span class="number">365</span></span><br><span class="line">星期	---	---</span><br><span class="line">W	ISO<span class="number">-8601</span> 格式年份中的第几周，每周从星期一开始（PHP <span class="number">4.1</span><span class="number">.0</span> 新加的）	例如：<span class="number">42</span>（当年的第 <span class="number">42</span> 周）</span><br><span class="line">月	---	---</span><br><span class="line">F	月份，完整的文本格式，例如 January 或者 March	January 到 December</span><br><span class="line">m	数字表示的月份，有前导零	<span class="number">01</span> 到 <span class="number">12</span></span><br><span class="line">M	三个字母缩写表示的月份	Jan 到 Dec</span><br><span class="line">n	数字表示的月份，没有前导零	<span class="number">1</span> 到 <span class="number">12</span></span><br><span class="line">t	指定的月份有几天	<span class="number">28</span> 到 <span class="number">31</span></span><br><span class="line">年	---	---</span><br><span class="line">L	是否为闰年	如果是闰年为 <span class="number">1</span>，否则为 <span class="number">0</span></span><br><span class="line">o	ISO<span class="number">-8601</span> 格式年份数字。这和 Y 的值相同，只除了如果 ISO 的星期数（W）属于前一年或下一年，则用那一年。（PHP <span class="number">5.1</span><span class="number">.0</span> 新加）	Examples: <span class="number">1999</span> <span class="keyword">or</span> <span class="number">2003</span></span><br><span class="line">Y	<span class="number">4</span> 位数字完整表示的年份	例如：<span class="number">1999</span> 或 <span class="number">2003</span></span><br><span class="line">y	<span class="number">2</span> 位数字表示的年份	例如：<span class="number">99</span> 或 <span class="number">03</span></span><br><span class="line">时间	---	---</span><br><span class="line">a	小写的上午和下午值	am 或 pm</span><br><span class="line">A	大写的上午和下午值	AM 或 PM</span><br><span class="line">B	Swatch Internet 标准时	<span class="number">000</span> 到 <span class="number">999</span></span><br><span class="line">g	小时，<span class="number">12</span> 小时格式，没有前导零	<span class="number">1</span> 到 <span class="number">12</span></span><br><span class="line">G	小时，<span class="number">24</span> 小时格式，没有前导零	<span class="number">0</span> 到 <span class="number">23</span></span><br><span class="line">h	小时，<span class="number">12</span> 小时格式，有前导零	<span class="number">01</span> 到 <span class="number">12</span></span><br><span class="line">H	小时，<span class="number">24</span> 小时格式，有前导零	<span class="number">00</span> 到 <span class="number">23</span></span><br><span class="line">i	有前导零的分钟数	<span class="number">00</span> 到 <span class="number">59</span>&gt;</span><br><span class="line">s	秒数，有前导零	<span class="number">00</span> 到 <span class="number">59</span>&gt;</span><br><span class="line">u	毫秒 （PHP <span class="number">5.2</span><span class="number">.2</span> 新加）。需要注意的是 date() 函数总是返回 <span class="number">000000</span> 因为它只接受 integer 参数， 而 DateTime::format() 才支持毫秒。	示例: <span class="number">654321</span></span><br><span class="line">时区	---	---</span><br><span class="line">e	时区标识（PHP <span class="number">5.1</span><span class="number">.0</span> 新加）	例如：UTC，GMT，Atlantic/Azores</span><br><span class="line">I	是否为夏令时	如果是夏令时为 <span class="number">1</span>，否则为 <span class="number">0</span></span><br><span class="line">O	与格林威治时间相差的小时数	例如：+<span class="number">0200</span></span><br><span class="line">P	与格林威治时间（GMT）的差别，小时和分钟之间有冒号分隔（PHP <span class="number">5.1</span><span class="number">.3</span> 新加）	例如：+<span class="number">02</span>:<span class="number">00</span></span><br><span class="line">T	本机所在的时区	例如：EST，MDT（【译者注】在 Windows 下为完整文本格式，例如“Eastern Standard Time”，中文版会显示“中国标准时间”）。</span><br><span class="line">Z	时差偏移量的秒数。UTC 西边的时区偏移量总是负的，UTC 东边的时区偏移量总是正的。	<span class="number">-43200</span> 到 <span class="number">43200</span></span><br><span class="line">完整的日期／时间	---	---</span><br><span class="line">c	ISO <span class="number">8601</span> 格式的日期（PHP <span class="number">5</span> 新加）	<span class="number">2004</span><span class="number">-02</span><span class="number">-12</span>T15:<span class="number">19</span>:<span class="number">21</span>+<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">r	RFC <span class="number">822</span> 格式的日期	例如：Thu, <span class="number">21</span> Dec <span class="number">2000</span> <span class="number">16</span>:<span class="number">01</span>:<span class="number">07</span> +<span class="number">0200</span></span><br><span class="line">U	从 Unix 纪元（January <span class="number">1</span> <span class="number">1970</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> GMT）开始至今的秒数	参见 time()</span><br></pre></td></tr></table></figure>
<h4 id="Carbon时间处理第三方库"><a href="#Carbon时间处理第三方库" class="headerlink" title="Carbon时间处理第三方库"></a>Carbon时间处理第三方库</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Carbon::parse(<span class="string">'2017-08-25 18:18:18'</span>);	<span class="comment"># 不用指定格式即可将时间字符串自动转换为Carbon对象</span></span><br></pre></td></tr></table></figure>
<h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$fp = fopen(<span class="string">"test"</span>, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);	<span class="comment"># 打开文件</span></span><br><span class="line">$fp = fopen(<span class="string">'test'</span>, <span class="string">'w'</span>)	<span class="comment"># 写入</span></span><br><span class="line">fread($fp,filesize(<span class="string">"webdictionary.txt"</span>));	<span class="comment"># 读取指定大小的内容</span></span><br><span class="line">fgetc($fp)		<span class="comment"># 读取一个字符</span></span><br><span class="line">fgets($fp)		<span class="comment"># 读取一行</span></span><br><span class="line">feof($fp)		<span class="comment"># 判断指针是否指向文件尾了</span></span><br><span class="line">fwrite($fp, <span class="string">'haofly'</span>)	<span class="comment"># 写入字符串到文件</span></span><br><span class="line">fclose($fp);	<span class="comment"># 关闭文件</span></span><br></pre></td></tr></table></figure>
<h4 id="函数-类-对象"><a href="#函数-类-对象" class="headerlink" title="函数/类/对象"></a>函数/类/对象</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># public, private, projtected的区别:</span></span><br><span class="line"><span class="keyword">public</span> <span class="comment"># 权限最多，可以内部调用，实例调用</span></span><br><span class="line"><span class="keyword">protected</span>	<span class="comment"># 受保护类型，用于本类和继承类调用</span></span><br><span class="line"><span class="keyword">private</span>		<span class="comment"># 私有类型，只有在本类中使用</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 对象的序列化和反序列化</span></span><br><span class="line">serialize()</span><br><span class="line">unserialize()</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 一些自省(反射)方法</span></span><br><span class="line">func_get_args()					<span class="comment"># 获取当前方法所有的参数</span></span><br><span class="line">get_class(className)			<span class="comment"># 取得当前语句所在的类名</span></span><br><span class="line">get_class_methods(className)	<span class="comment"># 取得相应class所包含的所有的方法名</span></span><br><span class="line">get_class_vars(clasName)		<span class="comment"># 取得相应class所包含的所有的变量名</span></span><br><span class="line">get_object_vars($object)		<span class="comment"># 获取类或者对象的属性，返回数组</span></span><br><span class="line">property_exists($object, $key)	<span class="comment"># 类或者对象是否存在某个属性</span></span><br><span class="line">setAttribute($name, $value)		<span class="comment"># 设置函数的属性或者直接设置函数的内部变量</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;&#123;$key&#125; = $value			<span class="comment"># 给类动态添加属性</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;&#123;$key&#125;					<span class="comment"># 返回对象指定的属性</span></span><br><span class="line"><span class="comment"># 根据类名知道类的定义文件</span></span><br><span class="line">$reflector = <span class="keyword">new</span> ReflectionClass(<span class="string">'className'</span>);</span><br><span class="line"><span class="keyword">echo</span> $reflector-&gt;getFileName();</span><br><span class="line"><span class="comment"># 标准嘞StdClass</span></span><br><span class="line">$obj-&gt;value <span class="comment"># 直接获取其内部的变量</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># trait: 一种代码复用机制，从基类继承的成员会被trait插入的成员所覆盖，优先顺序是来自当前类的成员覆盖了trait的方法，而trait则覆盖了被继承的方法。这是为了弥补PHP单继承的局限</span></span><br><span class="line"><span class="comment"># 例如可以写一个单例:</span></span><br><span class="line"><span class="keyword">trait</span> SingleInstance</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">private</span> $instance = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>::$instance) &#123;</span><br><span class="line">      <span class="keyword">self</span>::$instance = <span class="keyword">new</span> <span class="keyword">static</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>::$instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 在其他类里面只需要use SingleInstance就行了。再比如，文档里面的例子</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hello '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">trait</span> SayWorld &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::sayHello();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'World!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHelloWorld</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SayWorld</span>;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> MyHelloWorld();</span><br><span class="line">$o-&gt;sayHello();		<span class="comment">// 输出的是Hello World</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="发送CURL请求"><a href="#发送CURL请求" class="headerlink" title="发送CURL请求"></a>发送CURL请求</h4><p>注意：使用CURL之前一定要先确定服务器是否已经安装php的curl扩展，如果没有，可能会报奇怪的错误，安装完扩展后记得重启php进程。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ch = curl_init();								<span class="comment">// 初始化curl</span></span><br><span class="line">curl_setopt();									<span class="comment">// 设置参数</span></span><br><span class="line">curl_setopt($ch, CURLOPT_URL, <span class="string">'url'</span>);			<span class="comment">// 设置URL</span></span><br><span class="line">curl_setop($ch, CURLOPT_POST, <span class="keyword">true</span>);			<span class="comment">// 发送POST请求</span></span><br><span class="line">curl_setop($ch, CURL_POSTFIELDS, $data);		<span class="comment">// POST的数据</span></span><br><span class="line">curl_setop($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);	<span class="comment">// 获取返回结果，如果不加这个，那么$result=true</span></span><br><span class="line">$result = curl_exec($ch);						<span class="comment">// 执行curl请求</span></span><br><span class="line">curl_getinfo($ch, CURLINFO_HTTP_CODE)			<span class="comment">// 获取http_code</span></span><br><span class="line">  </span><br><span class="line">curl_setopt($curlHandle, CURLOPT_HTTPHEADER, [<span class="string">'Accept: application/json'</span>]);	<span class="comment">// 添加HTTP头</span></span><br><span class="line">curl_close($ch);								<span class="comment">// 关闭连接</span></span><br><span class="line"><span class="comment"># 如果要通过CURL 上传文件，那么需要这样对$data进行处理</span></span><br><span class="line"><span class="keyword">if</span> (function_exists(<span class="string">'curl_file_create'</span>)) &#123; <span class="comment">// php 5.6+</span></span><br><span class="line">  $cFile = curl_file_create($scriptPath);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">//</span></span><br><span class="line">  $cFile = <span class="string">'@'</span> . realpath($scriptPath);</span><br><span class="line">&#125;</span><br><span class="line">$data = [<span class="string">'file'</span> =&gt; $cFile];</span><br><span class="line"><span class="comment"># 获取curl所有参数所代表的常量值</span></span><br><span class="line">$arr = get_defined_constants(<span class="keyword">true</span>);</span><br><span class="line">var_dump($arr[<span class="string">'curl'</span>]);</span><br></pre></td></tr></table></figure></p>
<h4 id="WEB程序"><a href="#WEB程序" class="headerlink" title="WEB程序"></a>WEB程序</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[<span class="string">'REQUEST_METHOD'</span>]    <span class="comment"># 返回数据提交的方式，GET、POST等</span></span><br><span class="line">$_SERVER[<span class="string">"SERVER_PORT"</span>]     <span class="comment"># 获取端口</span></span><br><span class="line">$_SERVER[<span class="string">'HTTP_HOST'</span>]        <span class="comment"># 获取域名或主机地址</span></span><br><span class="line">$_SERVER[<span class="string">'SERVER_NAME'</span>]        <span class="comment"># 获取域名或主机名</span></span><br><span class="line">$_SERVER[<span class="string">"REQUEST_URI"</span>]        <span class="comment"># 获取域名后的详细地址</span></span><br><span class="line">$_SERVER[<span class="string">'PHP_SELF'</span>]        <span class="comment"># 获取PHP文件名</span></span><br><span class="line">$_SERVER[<span class="string">"QUERY_STRING"</span>]    <span class="comment"># 获取网址后的参数</span></span><br><span class="line">$_SERVER[<span class="string">'HTTP_REFERER'</span>]    <span class="comment"># 获取来源url</span></span><br><span class="line">parse_str(file_get_contents(<span class="string">"php://input"</span>),$post_vars); <span class="comment"># 获取PUT数据</span></span><br><span class="line">getallheaders        <span class="comment"># 获取请求头</span></span><br><span class="line">error_log(<span class="string">'message'</span>)    <span class="comment"># 把错误信息发送到web服务器的错误日志，或者到一个文件里，有长度限制</span></span><br></pre></td></tr></table></figure>
<h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_errno():    <span class="comment"># 打印SQL出错信息</span></span><br></pre></td></tr></table></figure>
<h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'soahg'</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="PHP命令行"><a href="#PHP命令行" class="headerlink" title="PHP命令行"></a>PHP命令行</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php --ini		<span class="comment"># 查看php的配置文件</span></span><br></pre></td></tr></table></figure>
<h4 id="帮助函数"><a href="#帮助函数" class="headerlink" title="帮助函数"></a>帮助函数</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">gettype(): 获取变量类型</span><br><span class="line">$obj <span class="keyword">instanceof</span> A <span class="comment"># 判断对象是否属于某个类，不过判断是不是数组只能用is_array()	# 判断是否是数组</span></span><br><span class="line">is_string()	<span class="comment"># 判断是否是字符串</span></span><br><span class="line">is_object()	<span class="comment"># 判断是否是object</span></span><br><span class="line">is_bool()	<span class="comment"># 是否是布尔值</span></span><br><span class="line">is_int()	<span class="comment"># 是否是整数</span></span><br><span class="line">is_integer()<span class="comment"># 是否是整数</span></span><br><span class="line">is_float()	<span class="comment"># 是否是浮点数</span></span><br><span class="line">is_real()	<span class="comment"># 是否是实数</span></span><br><span class="line">is_numeric	<span class="comment"># 是否是数字或者数字字符串</span></span><br><span class="line">interface_exists()	<span class="comment"># 检查接口是否已经定义</span></span><br><span class="line">class_exists()		<span class="comment"># 检查类是否已经定义</span></span><br><span class="line">  </span><br><span class="line">PHP_INT_MAX	<span class="comment"># 最大整数</span></span><br><span class="line">PHP_INT_MIN	<span class="comment"># 最小整数</span></span><br><span class="line">min($value1, $value2...)	<span class="comment"># 选出最小值，最大值max同理</span></span><br><span class="line">min([$value1, $value2,...])	<span class="comment"># 选出最小值，最大值max同理</span></span><br><span class="line">  </span><br><span class="line">hash_hmac(算法名, 明文, 盐)	<span class="comment"># hash加密函数，可以选定加密算法，例如hash_hmac('sha1', 'mingwen', 'salt')</span></span><br></pre></td></tr></table></figure>
<ul>
<li>@操作符: 错误控制运算符，写在一行的前面，可以控制改行不输出warning信息或错误信息</li>
<li>var_dump(变量名)：打印变量，这个函数还会打印变量的类型可以把一个变量的各个部分全部信息输出，包括每个部分的数据类型和长度等信息，但是默认情况下，输出有限制，如果层数深了或者数据长了可能会表示成省略号，可以在C:\wamp\bin\apache\apache2.4.9\bin\php.ini里面修改xdebug节点，添加如下内容</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xdebug.var_display_max_data=<span class="number">512</span></span><br><span class="line">xdebug.var_display_max_depth=<span class="number">5</span></span><br></pre></td></tr></table></figure>
<p>另外，将var_dump的输出转换为一个字符串以便web前端显示，可以这样用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ob_start();</span><br><span class="line">var_dump($data);</span><br><span class="line">$result = ob_get_clean();</span><br><span class="line"><span class="comment"># 或者用另外的函数</span></span><br><span class="line">var_export: 输出或返回一个变量的字符串表示</span><br></pre></td></tr></table></figure></p>
<ul>
<li>file_get_contents：获取文件或http内容，如果要从http获得json数据可以直接使用它</li>
<li>isset()：查看某个变量是否已经被定义，未赋值或赋NULL都会返回false</li>
<li>@header(‘Content-type: text/html;charset=UTF-8’);PHP文件中添加中文支持，在脚本开始的地方添加给行即可</li>
<li>多行输出：其中最后一个EOF必须写在一行的开头，且里面如果要用变量这样用{ $php_var }<br>echo &lt;&lt;&lt;EOF</li>
<li>print_r:打印关于变量的易于理解的信息。如果给出的是 string、integer 或 float，将打印变量值本身。如果给出的是 array，将会按照一定格式显示键和元素。这点在调试的时候很有用</li>
<li>类的方法尽量写成static，速度比public快</li>
</ul>
<h3 id="composer包管理"><a href="#composer包管理" class="headerlink" title="composer包管理"></a>composer包管理</h3><p>require是指在生产环境中必须的包，而require-dev则是开发的时候要用而生产环境无需用的包，常用命令:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">composer config --<span class="keyword">list</span>	<span class="comment"># 列出当前所有的配置</span></span><br><span class="line">composer show 	<span class="comment"># 获取所有安装的包的列表</span></span><br><span class="line">composer <span class="keyword">require</span> package_name --dev	<span class="comment"># 安装包，并将其写入composer.json的require-dev中去</span></span><br><span class="line">composer remove package_name	<span class="comment"># 移除包</span></span><br><span class="line">composer config -g repo.packagist composer https:<span class="comment">//packagist.phpcomposer.com	# 更换为国内的源</span></span><br><span class="line"><span class="comment"># 忽略ssl证书验证</span></span><br><span class="line">composer config --<span class="keyword">global</span> disable-tls <span class="keyword">true</span></span><br><span class="line">composer config --<span class="keyword">global</span> secure-http <span class="keyword">false</span></span><br><span class="line"><span class="string">"package/ppkg"</span>: <span class="string">"2.7.*@beta"</span>	<span class="comment"># 安装beta版</span></span><br></pre></td></tr></table></figure></p>
<h3 id="autoload"><a href="#autoload" class="headerlink" title="autoload"></a>autoload</h3><p>autoload，可以预加载类，自动索引所有的类，能够加快依赖的索引速度。但是autoload并不是实时更新的，如果发现vendor/composer/autoload_classmap.php中的类与你预想的有冲突，那么就需要更新一下了：composer dump-autoload。</p>
<p>在composer.json中有四种自动加载类型:</p>
<ul>
<li><p>classmap: development相关的</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"classmap"</span>: [<span class="string">"src/"</span>]	<span class="comment"># 这样composer就会读取这个文件夹下所有的文件，然后再vendor/composer/autoload_classmap.php中将所有的class的namespace+classname生成一个key=&gt;value的数组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>psr-0: 已经被弃用</p>
</li>
<li>psr-4: 一般用于项目代码的自动加载</li>
<li>files: helper相关的<h3 id="Extension扩展管理"><a href="#Extension扩展管理" class="headerlink" title="Extension扩展管理"></a>Extension扩展管理</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(extension_loaded(<span class="string">'curl'</span>));		<span class="comment">// 查看是否安装某个模块</span></span><br><span class="line">var_dump(get_loaded_extensions());		<span class="comment">// 查看安装了哪些模块</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="TroubleShooting"><a href="#TroubleShooting" class="headerlink" title="TroubleShooting"></a>TroubleShooting</h3><ul>
<li><p>Call to undefined function getallheaders()<br>版本问题，如果是老版本可以使用如下代码代替</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">'getallheaders'</span>)) &#123; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getallheaders</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">foreach</span>($_SERVER <span class="keyword">as</span> $key=&gt;$value) &#123; </span><br><span class="line">            <span class="keyword">if</span> (substr($key,<span class="number">0</span>,<span class="number">5</span>)==<span class="string">"HTTP_"</span>) &#123; </span><br><span class="line">                $key=str_replace(<span class="string">" "</span>,<span class="string">"-"</span>,ucwords(strtolower(str_replace(<span class="string">"_"</span>,<span class="string">" "</span>,substr($key,<span class="number">5</span>))))); </span><br><span class="line">                $out[$key]=$value; </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">                $out[$key]=$value; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">return</span> $out; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>回掉函数中访问外部变量<br>方法一：使用类的静态变量<br>方法二：使用use语法</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$dt-&gt;each(<span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span><span class="params">($bianliang)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> $bianliang;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Error while reading line from server<br>这是在使用predis时报的错误，原因是没有设置read_write_timeout=－1使redis保持永久连接，否则会在一定时间后断开连接</p>
</li>
<li>isset和empty判断变量是否存在的问题。都不能用于静态数组变量的判断，最好用array_key_exists</li>
</ul>
<p>原文摘至：<a href="http://haofly.net/php/" target="_blank" rel="noopener">http://haofly.net/php/</a></p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《维和步兵营》观后感]]></title>
      <url>/2017/11/23/%E3%80%8A%E7%BB%B4%E5%92%8C%E6%AD%A5%E5%85%B5%E8%90%A5%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<p>《维和步兵营》看完之后给我给我的感触和启发都颇深，脑子里久久都回荡着里面的每一个场景，不得不说是一部好的电视剧，从《士兵突击》到《我是特种兵》系列到《维和步兵营》不得不让我爱上那种军人气概、军人气节、军人情怀。天气转凉，蜷缩在被窝里，写点观后感，一部电视剧也是一种经历，记录下此刻的心境。</p>
<p>不是每个人生下来就拥有和平的生活，也不是每个人生下来就该面临残酷的社会境况。当我们在一个和平的国度每天上下班努力打拼赚钱养家，回家能洗上热乎乎的热水澡，晚上抱着媳妇儿孩子睡觉，工作之余出门旅游度假时，或者其他国家的人正在面临着战争、饥荒、疾病、死亡；我们生活在和平的国家，能谈理想、能享受生活，或许他们是否能活过明天都还是未知数。这不电视剧里面有很多都是真实的写照，部落之间的冲突与矛盾，政府军与反政府军的冲突，恐怖分子与资源争夺的冲突，这些都是真实发生在遥远的非洲，非洲人民面临战争、面临饥荒、面临贫穷与落后，里面有多个镜头是他们在马路浑浊的小水沟里取水的场景，看着着实辛酸；小孩们很多都是衣不遮体，很多的小孩和大人为了生活，不得不拿起手中的枪参加杀戮。</p>
<p>《维护步兵营》讲述的是一群训练有素的中国特种部队（隶属于中国特种部队红一连，红一连历史悠久、战功卓绝，跟随毛泽东参加过秋收起义，也称秋收起义红一连）奔赴非洲，维护世界和平的一段故事，在里面，我们看到了中国军人不畏艰难，有勇有谋，敢流血、敢牺牲的英勇精神；他们奔赴远方，头戴蓝盔，走向世界，维护和平。观影过程中不由自主留下四次泪水，有激动的泪水、感人的泪水、也有愤概的泪水，他们不是以个人、集团军的名义走向世界，他们是以国家荣誉而走向世界，13亿中国人是他们坚实的后盾，流血流泪，哪怕是牺牲，他们也只是默默的付出，不求回报。</p>
<p>人物描述</p>
<ul>
<li>戈睿：参军前，一个耀武扬威的公子哥，仗着自己家里有点钱，不可一世，整天都在想给身边的人证明点什么，却什么也没能证明；参军之后，也是一个‘买一赠一’的货，随着机缘来到特种部队，并且进入到红一连的维护部队训练营，毕竟年轻，桀骜不顺，吃过苦头，但还是觉得自己了不起，成天与薛三桥斗嘴，去导非洲之后还与外国士兵为争夺郑百合大打出手；当然，行事正义，为人大方。对于他非常特别的转变应该在薛三桥死后，真正的成熟不少，沉稳、执着，特别是在他给她妈打电话的那一刻，我不忍热泪盈眶。</li>
<li>薛三桥：记忆最深刻的当然是他的口头禅：“我不是针对谁，我也不是挑事的人”，一直都是戈睿的死对头，每次听到他说这句话我都想笑，有了他和戈睿，军营多了很多的欢声笑语、军营氛围；在他被炸弹击中倒下的那一刻，我又重新理解了战友之间的情怀，哪怕不是薛三桥，有可能其他的人也上了，因为在我的理解下，那是一种本能的反应，谁都有可能冲上去，就在冲上去的那一刻，倒下就再也没起来，头上都炸了几个窟窿。</li>
<li>戈向东：商人、退伍军人，有着浓烈的军人情结，不管是在利比亚还是非洲，都为中国军人给予不少的帮助，在他看来军民早就是一家人，同时他的身影，也体现了中国人民对非洲人民作出的贡献与付出，不畏战争，不畏死亡，为世界和平事业奉献一份力量。</li>
<li>岳东明：从《我是特种兵》里面的身影一直到这部戏，给我的感觉都是一个特别刚直不阿、不折不扣的军人，他的言语很有气势也很能打动人，我相信不仅仅是演戏，生活中也是一个很受欢迎的人。他在剧中的角色可以说是一个关键人物，在两连队人重组之后几乎到了快散架的时候，是他的出现稳定了全局；在赵忠宝失意决心离开部队退伍的时候，是他的出现，重新燃起赵忠宝那股战斗热情；在林浩楠决心离开连长一职，走向司令部获取更多情报时，是他的出现，重新带领整个连队继续战斗。他的角色可以说文武双全，有战略思想，同时也有政治情怀，剧中最让他无助的是在他还在部落战争维和的时候，他的母亲却悄然离开了人世，相隔万里，那种思念之痛可想而知；在剧中后半部分的时候，他却因为保护几个孩子，被恐怖分子的火箭弹击中，从此永远离开了红一连。家里有老婆，还有两个孩子，面对这样的情况编剧是不是有点太残忍了。</li>
<li>罗汉：罗汉这个演员还是在《我是特种兵》里面认识的，帅气、冷酷的形象让人记忆尤新，在本剧里面扮演的是林浩楠的助手，参演过很多的电视剧，可能以后也不会是男一号，但是他的人物个性鲜明，演技到位，我现在看这种电视剧有个情结，凡是有特种兵里面的人物，我都会继续看下去。</li>
<li>田爽：饰演者孙晶晶，在里面是个不折不扣的大美女，身材火辣性感，在本剧中为戈向东在非洲企业中的得力经理。。。</li>
</ul>
<p>未完待续。。。</p>
]]></content>
      
        <categories>
            
            <category> 杂文 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/11/22/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
